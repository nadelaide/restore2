{"version":3,"sources":["app/components/AppPagination.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/catalog/catalogSlice.ts","app/hooks/useProducts.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","features/home/HomePage.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/about/AboutPage.tsx","features/contact/ContactPage.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckbox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/components/AppDropzone.tsx","app/components/AppSelectList.tsx","features/admin/ProductValidation.ts","features/admin/ProductForm.tsx","features/admin/Inventory.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppPagination","metaData","onPageChange","currentPage","totalCount","totalPages","pageSize","useState","pageNumber","setPageNumber","Box","display","justifyContent","alignItems","Typography","Pagination","color","size","count","page","onChange","e","handlePageChange","CheckboxButtons","items","checked","checkedItems","setCheckedItems","FormGroup","map","item","FormControlLabel","control","Checkbox","indexOf","onClick","value","newChecked","findIndex","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","component","RadioGroup","Radio","PaginatedResponse","this","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","signInUser","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","roles","atob","token","split","toast","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","catalog","catalogSlice","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","response","interceptors","request","use","config","getState","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","requests","url","params","then","body","post","delete","put","createFormData","formData","FormData","append","Catalog","list","details","id","fetchFilters","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","Admin","createProduct","product","updateProduct","deleteProduct","productsAdapter","createEntityAdapter","getAxiosParams","productParams","URLSearchParams","toString","orderBy","searchTerm","brands","length","types","fetchProductsAsync","setMetaData","fetchProductAsync","getInitialState","productsLoaded","filtersLoaded","setProductParams","resetProductParams","setProduct","upsertOne","removeProduct","removeOne","setAll","productSelectors","getSelectors","useProducts","products","selectAll","useEffect","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","variant","sx","position","top","ProductCard","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","gutterBottom","price","brand","type","CardActions","LoadingButton","loading","includes","Button","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","fullWidth","sortOptions","columnSpacing","Paper","mb","p","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","List","ListItem","IconButton","Badge","badgeContent","ShoppingCart","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","src","alt","maxHeight","NotFound","Container","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","AboutPage","validationErrors","setValidationErrors","ButtonGroup","catch","Alert","severity","AlertTitle","ListItemText","ContactPage","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","some","r","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","AppTextInput","useController","defaultValue","fieldState","field","multiline","rows","AppCheckbox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","AppDropzone","dzStyles","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadFile","fontSize","FormHelperText","AppSelectList","InputLabel","Select","index","moreThan","min","file","when","is","ProductForm","cancelEdit","watch","watchFile","revokeObjectURL","Inventory","editMode","setEditMode","selectedProduct","setSelectedProduct","setTarget","handleSelectProduct","startIcon","Edit","App","initApp","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","createRoot","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.e03de290.chunk.js","sourcesContent":["import { Box, Typography, Pagination } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { MetaData } from \"../models/pagination\";\n\ninterface Props {\n    metaData: MetaData;\n    onPageChange: (page: number) => void;\n}\n\nexport default function AppPagination({metaData, onPageChange}: Props) {\n    const {currentPage, totalCount, totalPages, pageSize} = metaData;\n    const [pageNumber, setPageNumber] = useState(currentPage);\n\n    function handlePageChange(page: number) {\n        setPageNumber(page);\n        onPageChange(page);\n\n    }\n    return (\n        <Box display='flex' justifyContent='space-between' alignItems='center' >\n            <Typography>\n                Displaying {(currentPage-1)*pageSize+1}-\n                {currentPage*pageSize > totalCount ? totalCount : currentPage*pageSize} of {totalCount} items\n            </Typography>\n            <Pagination\n                color='secondary'\n                size='large'\n                count={totalPages}\n                page={pageNumber}\n                onChange={(e, page) => handlePageChange(page)}\n            />\n\n        </Box>\n    )\n}","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\nimport { useState } from \"react\";\n\ninterface Props {\n    items: string[];\n    checked?: string[];\n    onChange: (items: string[]) => void;\n}\n\nexport default function CheckboxButtons({items, checked, onChange}: Props) {\n    const [checkedItems, setCheckedItems] = useState(checked || [])\n\n    function handleChecked(value: string) {\n        const currentIndex = checkedItems.findIndex(item => item === value);\n        let newChecked: string[] = [];\n        if (currentIndex === - 1) newChecked = [...checkedItems, value];\n        else newChecked = checkedItems.filter(item => item !== value);\n        setCheckedItems(newChecked);\n        onChange(newChecked);\n    }\n\n    return (\n        <FormGroup>\n            {items.map(item => (\n                <FormControlLabel \n                    control={<Checkbox\n                        checked={checkedItems.indexOf(item) !== -1}\n                        onClick={() => handleChecked(item)}\n                         />} \n                    label={item} \n                    key={item} />\n            ))}\n        </FormGroup>\n    )\n}","\nimport { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\n\ninterface Props {\n    options: any[];\n    onChange: (event: any) => void;\n    selectedValue: string;\n}\n\nexport default function RadioButtonGroup({options, onChange, selectedValue}: Props) {\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup onChange={onChange} value={selectedValue}>\n                {options.map(({ value, label }) => (\n                    <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\n                ))}\n            </RadioGroup>\n        </FormControl>\n    )\n}","export interface MetaData {\n    currentPage: number;\n    totalPages: number;\n    pageSize: number;\n    totalCount: number;\n}\n\nexport class PaginatedResponse<T> {\n    items: T;\n    metaData: MetaData;\n\n    constructor(items: T, metaData: MetaData) {\n        this.items = items;\n        this.metaData = metaData;\n    }\n}","//get cookie from browser\nexport function getCookie(key: string) {\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\n    return b ? b.pop() : \"\";\n  }\n\nexport function currencyFormat(amount: number) {\n  return '$' + (amount / 100).toFixed(2)\n}","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { Basket } from \"../../app/models/basket\";\nimport { getCookie } from \"../../app/util/util\";\n\ninterface BasketState {\n    basket: Basket | null;\n    status: string;\n}\n\nconst initialState: BasketState = {\n    basket: null,\n    status: 'idle'\n}\n\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\n    'basket/fetchBasketAsync',\n    async (_, thunkAPI) => {\n        try {\n            return await agent.Basket.get();\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    },\n    {\n        condition: () => {\n            if (!getCookie('buyerId')) return false;\n        }\n    }\n)\n\nexport const addBasketItemAsync = createAsyncThunk<Basket, {productId: number, quantity?: number}>(\n    'basket/addBasketItemAsync',\n    async ({productId, quantity = 1}, thunkAPI) => {\n        try {\n            return await agent.Basket.addItem(productId, quantity);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const removeBasketItemAsync = createAsyncThunk<void, \n    {productId: number, quantity: number, name?: string}>(\n    'basket/removeBasketItemAsync',\n    async ({productId, quantity}, thunkAPI) => {\n        try {\n            await agent.Basket.removeItem(productId, quantity);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const basketSlice = createSlice({\n    name: 'basket',\n    initialState,\n    reducers: {\n        setBasket: (state, action) => {\n            state.basket = action.payload\n        },\n        clearBasket: (state) => {\n            state.basket = null;\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\n        });\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\n        });\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\n            const {productId, quantity} = action.meta.arg;\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\n            if (itemIndex === -1 || itemIndex === undefined) return;\n            state.basket!.items[itemIndex].quantity -= quantity;\n            if (state.basket?.items[itemIndex].quantity === 0) \n                state.basket.items.splice(itemIndex, 1);\n            state.status = 'idle';\n        });\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\n            state.basket = action.payload;\n            state.status = 'idle';\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n    })\n})\n\nexport const {setBasket, clearBasket} = basketSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport { FieldValues } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport agent from \"../../app/api/agent\";\nimport { User } from \"../../app/models/user\";\nimport { setBasket } from \"../basket/basketSlice\";\n\ninterface AccountState {\n    user: User | null;\n}\n\nconst initialState: AccountState = {\n    user: null\n}\n\nexport const signInUser = createAsyncThunk<User, FieldValues>(\n    'account/signInUser',\n    async (data, thunkAPI) => {\n        try {\n            const userDto = await agent.Account.login(data);\n            const {basket, ...user} = userDto;\n            if (basket) thunkAPI.dispatch(setBasket(basket));\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    }\n)\n\nexport const fetchCurrentUser = createAsyncThunk<User>(\n    'account/fetchCurrentUser',\n    async (_, thunkAPI) => {\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\n        try {\n            const userDto = await agent.Account.currentUser();\n            const {basket, ...user} = userDto;\n            if (basket) thunkAPI.dispatch(setBasket(basket));\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    },\n    {\n        condition: () => {\n            if (!localStorage.getItem('user')) return false;\n        }\n    }\n)\n\nexport const accountSlice = createSlice({\n    name: 'account',\n    initialState,\n    reducers: {\n        signOut: (state) => {\n            state.user = null;\n            localStorage.removeItem('user');\n            history.push('/');\n        },\n        setUser: (state, action) => {\n            let claims = JSON.parse(atob(action.payload.token.split('.')[1]));\n            let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n            state.user = {...action.payload, roles: typeof(roles) == 'string' ? [roles] : roles}\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\n            state.user = null;\n            localStorage.removeItem('user');\n            toast.error('Session expired - please login again');\n            history.push('/');\n        });\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\n            let claims = JSON.parse(atob(action.payload.token.split('.')[1]));\n            let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n            state.user = {...action.payload, roles: typeof(roles) == 'string' ? [roles] : roles}\n        });\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\n            throw action.payload;\n        })\n    })\n})\n\nexport const {signOut, setUser} = accountSlice.actions; ","import { createSlice } from \"@reduxjs/toolkit\";\n\n//slice of overall redux state\nexport interface CounterState {\n    data: number;\n    title: string;\n}\n\nconst initialState: CounterState = {\n    data: 42,\n    title: 'YARC'\n}\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment: (state, action) => {\n            state.data += action.payload\n        },\n        decrement: (state, action) => {\n            state.data -= action.payload\n        }\n    }\n})\n\nexport const {increment, decrement} = counterSlice.actions; //creates actions for us","import { configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { accountSlice } from \"../../features/account/accountSlice\";\nimport { basketSlice } from \"../../features/basket/basketSlice\";\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\nimport { counterSlice } from \"../../features/contact/counterSlice\";\n\n// export function configureStore() {\n//     return createStore(counterReducer);\n// }\n\nexport const store = configureStore({\nreducer: {\n        counter: counterSlice.reducer,\n        basket: basketSlice.reducer,\n        catalog: catalogSlice.reducer,\n        account: accountSlice.reducer\n    }\n})\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { PaginatedResponse } from \"../models/pagination\";\nimport { store } from \"../store/configureStore\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.withCredentials = true; // receive and set cookie in application storage as well\n\n//add loading delay\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500)) //1000 miliseconds\n\n//to extract data from the body\nconst responseBody = (response: AxiosResponse) => response.data;\n\naxios.interceptors.request.use(config => {\n    const token = store.getState().account.user?.token;\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n})\n\naxios.interceptors.response.use(async response => {\n    if (process.env.NODE_ENV === 'development') await sleep();\n    const pagination = response.headers['pagination'];\n    if (pagination) {\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\n        return response;\n    }\n    return response\n}, (error: AxiosError) => {\n    const {data, status} = error.response!; //! overides type safety\n    switch (status) {\n        case 400:\n            if (data.errors) {\n                const modelStateErrors: string[] =[]; \n                for (const key in data.errors) {\n                    if (data.errors[key]) {\n                        modelStateErrors.push(data.errors[key])\n                    }\n                }\n                throw modelStateErrors.flat(); //flattens array into two strings\n            }\n            toast.error(data.title);\n            break;\n        case 401:\n            toast.error(data.title);\n            break;\n        case 403:\n            toast.error('You are not allowed to do that!');\n            break;\n        case 500:\n            history.push({\n                pathname: '/server-error',\n                state: {error: data}\n            });\n            break;\n        default:\n            break;\n    }\n    return Promise.reject(error.response);\n})\n\nconst requests = {\n    get: (url: string, params?: URLSearchParams) => axios.get(url, {params}).then(responseBody),\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\n    delete: (url: string) => axios.delete(url).then(responseBody),\n    postForm: (url: string, data: FormData) => axios.post(url, data, {\n        headers: {'Content-type': 'mulitpart/form-data'}\n    }).then(responseBody),\n    putForm: (url: string, data: FormData) => axios.put(url, data, {\n        headers: {'Content-type': 'mulitpart/form-data'}\n    }).then(responseBody)\n}\n\n//helper to transform data\nfunction createFormData(item: any) {\n    let formData = new FormData();\n    for (const key in item) {\n        formData.append(key, item[key])\n    }\n    return formData;\n}\n\nconst Admin = {\n    createProduct: (product: any) => requests.postForm('products', createFormData(product)),\n    updateProduct: (product: any) => requests.putForm('products', createFormData(product)),\n    deleteProduct: (id: number) => requests.delete(`products/${id}`)\n}\n\nconst Catalog = {\n    list: (params: URLSearchParams) => requests.get('products', params), \n    details: (id: number) => requests.get(`products/${id}`),\n    fetchFilters: () => requests.get('products/filters')\n}\n\nconst TestErrors = {\n    get400Error: () => requests.get('buggy/bad-request'),\n    get401Error: () => requests.get('buggy/unauthorized'),\n    get404Error: () => requests.get('buggy/not-found'),\n    get500Error: () => requests.get('buggy/server-error'),\n    getValidationError: () => requests.get('buggy/validation-error'),\n}\n\nconst Basket = {\n    get: () => requests.get('basket'),\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}), //not sending data in body\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`), //not sending data in body\n}\n\nconst Account = {\n    login: (values: any) => requests.post('account/login', values),\n    register: (values: any) => requests.post('account/register', values),\n    currentUser: () => requests.get('account/currentUser'),\n    fetchAddress: () => requests.get('account/savedAddress')\n}\n\nconst Orders ={\n    list: () => requests.get('orders'),\n    fetch: (id: number) => requests.get(`orders/${id}`),\n    create: (values: any) => requests.post('orders', values)\n}\n\nconst Payments = {\n    createPaymentIntent: () => requests.post('payments', {})\n}\n\nconst agent = {\n    Catalog,\n    TestErrors,\n    Basket,\n    Account,\n    Orders,\n    Payments,\n    Admin\n}\n\nexport default agent;","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { MetaData } from \"../../app/models/pagination\";\nimport { Product, ProductParams } from \"../../app/models/product\";\nimport { RootState } from \"../../app/store/configureStore\";\n\ninterface CatalogState {\n    productsLoaded: boolean;\n    filtersLoaded: boolean;\n    status: string;\n    brands: string[];\n    types: string[];\n    productParams: ProductParams;\n    metaData: MetaData | null;\n}\n\nconst productsAdapter = createEntityAdapter<Product>();\n\nfunction getAxiosParams(productParams: ProductParams) {\n    const params = new URLSearchParams();\n    params.append('pageNumber', productParams.pageNumber.toString());\n    params.append('pageSize', productParams.pageSize.toString());\n    params.append('orderBy', productParams.orderBy);\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\n    return params;\n}\n\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, {state: RootState}>(\n    'catalog/fetchProductsAsync',\n    async (_, thunkAPI) => {\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\n        try {\n            const response = await agent.Catalog.list(params);\n            thunkAPI.dispatch(setMetaData(response.metaData));\n            return response.items;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\n    'catalog/fetchProductAsync',\n    async (productId, thunkAPI) => {\n        try {\n            return await agent.Catalog.details(productId);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const fetchFilters = createAsyncThunk(\n    'catalog/fetchFilters',\n    async (_, thunkAPI) => {\n        try {\n            return agent.Catalog.fetchFilters();\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nfunction initParams() {\n    return {\n        pageNumber: 1,\n        pageSize: 6,\n        orderBy: 'name',\n        brands: [],\n        types: []\n    }\n}\n\nexport const catalogSlice = createSlice({\n    name: 'catalog',\n    initialState: productsAdapter.getInitialState<CatalogState>({\n        productsLoaded: false,\n        filtersLoaded: false,\n        status: 'idle',\n        brands: [],\n        types: [],\n        productParams: initParams(),\n        metaData: null\n    }),\n    reducers: {\n        setProductParams: (state, action) => {\n            state.productsLoaded = false;\n            state.productParams = {...state.productParams, ...action.payload, pageNumber: 1};\n        },\n        setPageNumber: (state, action) => {\n            state.productsLoaded = false;\n            state.productParams = {...state.productParams, ...action.payload};\n        },\n        setMetaData: (state, action) => {\n            state.metaData = action.payload;\n        },\n        resetProductParams: (state) => {\n            state.productParams = initParams();\n        },\n        setProduct: (state, action) => {\n            productsAdapter.upsertOne(state, action.payload);\n            state.productsLoaded = false;\n        },\n        removeProduct: (state, action) => {\n            productsAdapter.removeOne(state, action.payload);\n            state.productsLoaded = false;\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchProductsAsync.pending, (state) => {\n            state.status = 'pendingFetchProducts';\n        });\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\n            productsAdapter.setAll(state, action.payload);\n            state.status = 'idle';\n            state.productsLoaded = true;\n        });\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchProductAsync.pending, (state) => {\n            state.status = 'pendingFetchProduct';\n        });\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\n            productsAdapter.upsertOne(state, action.payload);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\n            console.log(action);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchFilters.pending, (state) => {\n            state.status = 'pendingFetchFilters';\n        });\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\n            state.brands = action.payload.brands;\n            state.types = action.payload.types;\n            state.filtersLoaded = true;\n            state.status = 'idle';\n        });\n        builder.addCase(fetchFilters.rejected, (state, action) => {\n            state.status = 'idle';\n            console.log(action.payload);\n        })\n    })\n})\n\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\n\nexport const {setProductParams, resetProductParams, setMetaData, setPageNumber, setProduct, removeProduct} = catalogSlice.actions;","import { useEffect } from \"react\";\nimport { productSelectors, fetchProductsAsync, fetchFilters } from \"../../features/catalog/catalogSlice\";\nimport { useAppSelector, useAppDispatch } from \"../store/configureStore\";\n\nexport default function useProducts() {\n    const products = useAppSelector(productSelectors.selectAll);\n    const { productsLoaded, filtersLoaded, brands, types, metaData } = useAppSelector(state => state.catalog);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (!productsLoaded) dispatch(fetchProductsAsync());\n    }, [productsLoaded, dispatch])\n\n    useEffect(() => {\n        if (!filtersLoaded) dispatch(fetchFilters());\n    }, [filtersLoaded, dispatch]);\n\n    return {\n        products,\n        productsLoaded,\n        filtersLoaded,\n        brands,\n        types,\n        metaData\n    }\n}","import { Backdrop, Box, CircularProgress, Typography } from \"@mui/material\";\n\ninterface Props {\n    message?: string;\n}\n\nexport default function LoadingComponent({message = 'Loading...'}: Props) {\n    return (\n        <Backdrop open={true} invisible={true}>\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\n                <CircularProgress size={100} color='secondary'/>\n                <Typography variant='h4' sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}>{message}</Typography>\n                \n            </Box>\n        </Backdrop>\n    )\n}","import { LoadingButton } from \"@mui/lab\";\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { Product } from \"../../app/models/product\";\nimport { useAppDispatch, useAppSelector} from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\n\ninterface Props {\n    product: Product;\n}\n\nexport default function ProductCard({product}: Props) {\n    const {status} = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch();\n\n    return (\n        <Card>\n            <CardHeader \n                avatar={\n                    <Avatar sx={{bgcolor: 'secondary.main'}}>\n                        {product.name.charAt(0).toUpperCase()}\n                    </Avatar>\n                }\n                title={product.name}\n                titleTypographyProps={{\n                    sx: {fontWeight: 'bold', color: 'primary.main'}\n                }}\n            />\n            <CardMedia\n                sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light'}}\n                image={product.pictureUrl}\n                title={product.name}\n            />\n            <CardContent>\n                <Typography gutterBottom color='secondary' variant=\"h5\">\n                    {currencyFormat(product.price)}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                    {product.brand} / {product.type}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <LoadingButton \n                loading={status.includes('pendingAddItem' + product.id)} \n                onClick={() => dispatch(addBasketItemAsync({productId: product.id}))}\n                size=\"small\">Add to Cart</LoadingButton>\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\n            </CardActions>\n        </Card>\n    )\n}","import {\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    Grid,\n    Skeleton\n} from \"@mui/material\";\n\nexport default function ProductCardSkeleton() {\n    return (\n        <Grid item xs component={Card}>\n            <CardHeader\n                avatar={\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\n                }\n                title={\n                    <Skeleton\n                        animation=\"wave\"\n                        height={10}\n                        width=\"80%\"\n                        style={{ marginBottom: 6 }}\n                    />\n                }\n            />\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\n            <CardContent>\n                <>\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n                </>\n            </CardContent>\n            <CardActions>\n                <>\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\n                </>\n            </CardActions>\n        </Grid>\n    )\n}","import { Grid } from \"@mui/material\";\nimport { Product } from \"../../app/models/product\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport ProductCard from \"./ProductCard\";\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\n\ninterface Props {\n    products: Product[];\n}\n\nexport default function ProductList({products}: Props) {\n    const {productsLoaded} = useAppSelector(state => state.catalog);\n    return (\n        <Grid container spacing={4}>\n            {products.map(product => ( //using props from signature above\n                <Grid item xs={4} key={product.id} >\n                    {!productsLoaded ? (\n                        <ProductCardSkeleton />\n                    ) : (\n                        <ProductCard product={product}/>\n                    )}\n                </Grid>\n            ))}\n        </Grid>\n    )\n}","import { debounce, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { setProductParams } from \"./catalogSlice\";\n\nexport default function ProductSearch() {\n    const {productParams} = useAppSelector(state => state.catalog);\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\n    const dispatch = useAppDispatch();\n\n    const debouncedSearch = debounce((event: any) => {\n        dispatch(setProductParams({searchTerm: event.target.value}))\n    }, 1000)\n\n    return (\n        <TextField\n            label='Search products'\n            variant='outlined'\n            fullWidth\n            value={searchTerm || ''}\n            onChange={(event: any) => {\n                setSearchTerm(event.target.value);\n                debouncedSearch(event);\n            }}\n        />\n    )\n}","import { Grid, Paper } from \"@mui/material\";\nimport AppPagination from \"../../app/components/AppPagination\";\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\";\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\nimport useProducts from \"../../app/hooks/useProducts\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { setPageNumber, setProductParams } from \"./catalogSlice\";\nimport ProductList from \"./ProductList\";\nimport ProductSearch from \"./ProductSearch\";\n\nconst sortOptions = [\n    {value: 'name', label: 'Alphabetical'},\n    {value: 'priceDesc', label: 'Price - High to Low'},\n    {value: 'price', label: 'Price - Low to High'}\n]\n\nexport default function Catalog() { //specifies the properties you need\n    const {products, brands, types, filtersLoaded, metaData} = useProducts();\n    const {productParams,} = useAppSelector(state => state.catalog);\n    const dispatch = useAppDispatch();\n\n    if (!filtersLoaded) return <LoadingComponent message='Loading products...'/>\n\n    return (\n        <Grid container columnSpacing={4}>\n            <Grid item xs={3}>\n                <Paper sx={{ mb: 2 }}>\n                    <ProductSearch/>\n                </Paper>\n                <Paper sx={{ mb: 2, p: 2 }}>\n                    <RadioButtonGroup\n                        selectedValue={productParams.orderBy}\n                        options={sortOptions}\n                        onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\n                    />\n                </Paper>\n\n                <Paper sx={{ mb: 2, p: 2 }}>\n                    <CheckboxButtons \n                        items={brands}\n                        checked={productParams.brands}\n                        onChange={(items: string[]) => dispatch(setProductParams({brands: items}))}\n                    />\n                </Paper>\n\n                <Paper sx={{ mb: 2, p: 2 }}>\n                    <CheckboxButtons \n                            items={types}\n                            checked={productParams.types}\n                            onChange={(items: string[]) => dispatch(setProductParams({types: items}))}\n                        />\n                </Paper>\n\n            </Grid>\n            <Grid item xs={9}>\n                <ProductList products={products} />\n            </Grid>\n            <Grid item xs={3} />\n            <Grid item xs={9} sx={{ mb: 2}}>\n                {metaData &&\n                <AppPagination \n                    metaData={metaData}\n                    onPageChange={(page: number) => dispatch(setPageNumber({pageNumber: page}))}\n                />}\n            </Grid>\n        </Grid>\n    )\n}","import { Button, Menu, Fade, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport { signOut } from \"../../features/account/accountSlice\";\nimport { clearBasket } from \"../../features/basket/basketSlice\";\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\n\nexport default function SignedInMenu() {\n    const dispatch = useAppDispatch();\n    const { user } = useAppSelector(state => state.account);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            <Button\n                color='inherit'\n                onClick={handleClick}\n                sx={{ typography: 'h6' }}\n            >\n                {user?.email}\n            </Button>\n            <Menu\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My orders</MenuItem>\n                <MenuItem onClick={() => {\n                    dispatch(signOut());\n                    dispatch(clearBasket());\n                }}>Logout</MenuItem>\n            </Menu>\n        </>\n    );\n} ","import { ShoppingCart } from \"@mui/icons-material\";\nimport { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { useAppSelector } from \"../store/configureStore\";\nimport SignedInMenu from \"./SignedInMenu\";\n\ninterface Props {\n    darkMode: boolean;\n    handleThemeChange: () => void;\n}\n\n//array to store links\nconst midLinks = [\n    {title: 'catalog', path:'/catalog'},\n    {title: 'about', path:'/about'},\n    {title: 'contact', path:'/contact'},\n]\n\n//array to store right-handside links\nconst rightLinks = [\n    {title: 'login', path:'/login'},\n    {title: 'register', path:'/register'},\n]\nconst navStyles = {\n    color: 'inherit',\n    textDecoration: 'none',\n    typography: 'h6',\n    '&:hover': {\n        color: 'grey.500'\n    },\n    '&.active': {\n        color: 'text.secondary'\n    }\n}\n\nexport default function Header({darkMode, handleThemeChange} : Props) {\n    const {basket} = useAppSelector(state => state.basket);\n    const {user} =useAppSelector(state => state.account);\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0) //reduce - similar to map - executes a clal back for each item in the array\n\n    return (\n        <AppBar position='static' >\n            <Toolbar sx={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n\n                <Box display='flex' alignItems='center'>\n                    <Typography variant='h6' component={NavLink} to='/' exact sx={navStyles}>\n                        RE-STORE\n                    </Typography>\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\n                </Box>\n\n                <List sx={{ display: 'flex' }}>\n                    {midLinks.map(({ title, path }) => (\n                        <ListItem\n                            component={NavLink}\n                            to={path}\n                            key={path}\n                            sx={navStyles}\n                        >\n                            {title.toUpperCase()}\n                        </ListItem>\n                    ))}\n                    {user && user.roles?.includes('Admin') &&\n                    <ListItem\n                            component={NavLink}\n                            to={'/inventory'}\n                            sx={navStyles}\n                        >\n                            INVENTORY\n                        </ListItem>}\n                </List>\n\n                <Box display='flex' alignItems='center'>\n                    <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }}>\n                        <Badge badgeContent={itemCount} color='secondary'>\n                            <ShoppingCart />\n                        </Badge>\n                    </IconButton>\n                    {user ? (\n                        <SignedInMenu />\n                    ) : (\n                        <List sx={{ display: 'flex' }}>\n                            {rightLinks.map(({ title, path }) => (\n                                <ListItem\n                                    component={NavLink}\n                                    to={path}\n                                    key={path}\n                                    sx={navStyles}\n                                >\n                                    {title.toUpperCase()}\n                                </ListItem>\n                            ))}\n                        </List>\n                    )}\n                </Box>\n            </Toolbar>\n        </AppBar>\n    )\n}","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Slider from 'react-slick';\n\nexport default function HomePage() {\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1\n      };\n\n    return (\n\n        <>\n            <Slider {...settings} >\n                <div>\n                    <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n                </div>\n                <div>\n                    <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n                </div>\n                <div>\n                    <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n                </div>\n            </Slider>\n\n            <Box display='flex' justifyContent='center' sx={{p: 4}}>\n                <Typography variant='h1'>\n                    Welcome to the shop!\n                </Typography>\n\n            </Box>\n        </>\n    )\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NotFound() {\n    return (\n        <Container component={Paper} sx={{height: 400}}>\n            <Typography gutterBottom variant='h3'>Oops, we could not find what you're looking for.</Typography>\n            <Divider />\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\n        </Container>\n    )\n}","import { LoadingButton } from \"@mui/lab\";\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NotFound from \"../../app/errors/NotFound\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { addBasketItemAsync, removeBasketItemAsync } from \"../basket/basketSlice\";\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\n\nexport default function ProductDetails() {\n    const {basket, status} = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch();\n    const{id} = useParams<{id: string}>();\n    //to store response from API in useEffect\n    const product = useAppSelector(state => productSelectors.selectById(state, id));\n    const {status: productStatus} = useAppSelector(state => state.catalog);\n    //set quantity - how many does the user already have in basket\n    const [quantity, setQuantity] = useState(0);\n    const item = basket?.items.find(i => i.productId === product?.id);\n\n    useEffect(() => {\n        if (item) setQuantity(item.quantity);\n        if (!product) dispatch(fetchProductAsync(parseInt(id)));\n    }, [id, item, dispatch, product]) //id is the dependency being used in this useEffect\n    // called when it first mounts and called if id changes\n    function handleInputChange(event: any) {\n        if (event.target.value >= 0) {\n            setQuantity(parseInt(event.target.value));\n        }\n    }\n\n    //check if removing items from cart, adding items, or adding a new item\n    function handleUpdateCart() {\n        //check for item quantity - if local state is greater, adding to quantity\n        if (!item || quantity > item.quantity) {\n            const updatedQuantity = item ? quantity - item.quantity : quantity // quantity is local state\n            dispatch(addBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\n        } else {\n            const updatedQuantity = item.quantity - quantity;\n            dispatch(removeBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\n        }\n    }\n\n\n    //add conditions before returning\n    // check before loading\n    if (productStatus.includes('pending')) return <LoadingComponent message='Loading product...'/>\n\n    if (!product) return <NotFound/>\n\n    return (\n        <Grid container spacing={6}>\n            <Grid item xs={6}>\n                <img src={product.pictureUrl} alt={product.name} style={{width: '100%'}} />\n            </Grid>\n            <Grid item xs={6}>\n                <Typography variant='h3'>{product.name}</Typography>\n                <Divider sx={{mb: 2}} />\n                <Typography variant='h4' color='secondary'>${(product.price /100).toFixed(2)}</Typography>\n                <TableContainer>\n                    <Table>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>Name</TableCell>\n                                <TableCell>{product.name}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Description</TableCell>\n                                <TableCell>{product.description}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Type</TableCell>\n                                <TableCell>{product.type}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Brand</TableCell>\n                                <TableCell>{product.brand}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Quantity in stock</TableCell>\n                                <TableCell>{product.quantityInStock}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <TextField\n                        onChange={handleInputChange}\n                            variant='outlined'\n                            type='number' //only accepts numbers in textfield\n                            label='Quantity in Cart'\n                            fullWidth\n                            value={quantity} //displays quantity in basket or 0\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <LoadingButton\n                            disabled={item?.quantity === quantity}\n                            loading={status.includes('pending')}\n                            onClick={handleUpdateCart}\n                            sx={{height: '55px'}}\n                            color='primary'\n                            size='large'\n                            variant='contained'\n                            fullWidth\n                        >\n                            {item ? 'Update Quantity' : 'Add to Cart'}\n                        </LoadingButton>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport agent from \"../../app/api/agent\";\n\nexport default function AboutPage() {\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\n\n    function getValidationError() {\n        agent.TestErrors.getValidationError()\n            .then(() => console.log('should not see this'))\n            .catch(error => setValidationErrors(error));\n    }\n\n    return (\n        <Container>\n            <Typography gutterBottom variant='h2'>Errors for testing purposes</Typography>\n            <ButtonGroup fullWidth>\n                <Button variant='contained' onClick={() => agent.TestErrors.get400Error().catch(error => console.log((error)))}>Test 400 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get401Error().catch(error => console.log((error)))}>Test 401 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get404Error().catch(error => console.log((error)))}>Test 404 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get500Error().catch(error => console.log((error)))}>Test 500 Error</Button>\n                <Button variant='contained' onClick={getValidationError}>Test Validation Error</Button>\n            </ButtonGroup>\n            {validationErrors.length > 0 && \n                <Alert severity='error'>\n                    <AlertTitle>Validation Errors</AlertTitle>\n                    <List>\n                        {validationErrors.map(error => (\n                            <ListItem key={error}>\n                                <ListItemText>{error}</ListItemText>\n                            </ListItem>\n                        ))}\n                    </List>\n                </Alert>    \n            }\n        </Container>\n    )\n}","import { Button, ButtonGroup, Typography } from \"@mui/material\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { decrement, increment } from \"./counterSlice\";\n\nexport default function ContactPage() {\n    const dispatch = useAppDispatch();\n    const {data, title} = useAppSelector(state => state.counter);\n    return (\n        <>\n            <Typography variant='h2'>\n                {title}\n            </Typography>\n            <Typography variant='h5'>\n                The data is: {data}\n            </Typography>\n            <ButtonGroup>\n                <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>Decrement</Button>\n                <Button onClick={() => dispatch(increment(1))} variant='contained' color='primary'>Increment</Button>\n            </ButtonGroup>\n        </>\n    )\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport default function ServerError() {\n    const history = useHistory();\n    const {state} = useLocation<any>();\n    return (\n        <Container component={Paper}>\n            {state?.error ? (\n                <>\n                <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\n                <Divider />\n                <Typography>{state.error.detail || 'Internal server error'}</Typography>\n                </>\n            ): (\n                <Typography variant='h3' gutterBottom>Server error</Typography>\n            )}\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\n        </Container>\n    )\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\n\ninterface Props {\n    subtotal?: number;\n}\n\nexport default function BasketSummary({subtotal}: Props) {\n    const {basket} = useAppSelector(state => state.basket);\n    if (subtotal === undefined)\n        subtotal = basket?.items.reduce((sum, item) => sum + (item.price * item.quantity), 0) ?? 0;\n    const deliveryFee = subtotal > 9999 ? 0 : 500;\n\n    return (\n        <>\n            <TableContainer component={Paper} variant={'outlined'}>\n                <Table>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell colSpan={2}>Subtotal</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Total</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\nimport { BasketItem } from \"../../app/models/basket\";\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\n\ninterface Props {\n    items: BasketItem[];\n    isBasket?: boolean;\n}\n\nexport default function BasketTable({items, isBasket = true}: Props) {\n    const { status } = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch();\n    return (\n        <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Product</TableCell>\n                            <TableCell align=\"right\">Price</TableCell>\n                            <TableCell align=\"center\">Quantity</TableCell>\n                            <TableCell align=\"right\">Subtotal</TableCell>\n                            {isBasket && \n                            <TableCell align=\"right\"></TableCell>}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {items.map((item) => (\n                            <TableRow\n                                key={item.productId}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <Box display='flex' alignItems='center'>\n                                        <img src={item.pictureUrl} alt={item.name} style={{ height: 50, marginRight: 20 }} />\n                                        <span>{item.name}</span>\n                                    </Box>\n                                </TableCell>\n                                <TableCell align=\"right\">{currencyFormat(item.price)}</TableCell>\n                                <TableCell align=\"center\">\n                                {isBasket &&\n                                    <LoadingButton loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: 1, name: 'rem' }))} color='secondary'>\n                                        <Remove />\n                                    </LoadingButton>}\n                                    {item.quantity}\n                                    {isBasket &&\n                                    <LoadingButton loading={status === 'pendingAddItem' + item.productId}\n                                        onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))} color='secondary'>\n                                        <Add />\n                                    </LoadingButton>}\n                                </TableCell>\n                                <TableCell align=\"right\">${((item.price / 100) * item.quantity).toFixed(2)}</TableCell>\n                                {isBasket &&\n                                <TableCell align=\"right\">\n                                    <LoadingButton loading={status === 'pendingRemoveItem' + item.productId + 'del'}\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: item.quantity, name: 'del' }))} color='error'>\n                                        <Delete />\n                                    </LoadingButton>\n                                </TableCell>}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n    )\n}","import { Button, Grid, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport BasketSummary from \"./BasketSummary\";\nimport BasketTable from \"./BasketTable\";\n\nexport default function BasketPage() {\n    const { basket } = useAppSelector(state => state.basket);\n\n    if (!basket) return <Typography variant='h3' >Your basket is empty</Typography>\n\n    return (\n        <>\n           <BasketTable items={basket.items} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary />\n                    <Button\n                        component={Link}\n                        to='/checkout'\n                        variant='contained'\n                        size='large'\n                        fullWidth\n                    >\n                        Checkout\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    )\n}","import Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Paper } from '@mui/material';\nimport { FieldValues, useForm } from 'react-hook-form';\nimport { LoadingButton } from '@mui/lab';\nimport { useAppDispatch } from '../../app/store/configureStore';\nimport { signInUser } from './accountSlice';\n\nexport default function Login() {\n    const history = useHistory();\n    const location = useLocation<any>();\n    const dispatch = useAppDispatch();\n    const {register, handleSubmit, formState: {isSubmitting, errors, isValid}} = useForm({\n        mode: 'all'\n    })\n\n    async function submitForm(data: FieldValues) {\n        try {\n          await dispatch(signInUser(data));\n          history.push(location.state?.from?.pathname || '/catalog');\n        } catch (error) {\n          console.log(error);\n        }\n    }\n\n  return (\n      <Container component={Paper} maxWidth=\"sm\" \n      sx={{display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4}}>\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              label=\"Username\"\n              autoFocus //cursor in field automatically\n              {...register('username', {required: 'Username is required'})}\n              error={!!errors.username} // finds errors if they exist and prints in red\n              helperText={errors?.username?.message}\n            />\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              label=\"Password\"\n              type=\"password\"\n              {...register('password', {required: 'Password is required'})}\n              error={!!errors.password} // finds errors if they exist and prints in red\n              helperText={errors?.password?.message}\n            />\n            <LoadingButton\n            disabled={!isValid}\n            loading={isSubmitting}\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </LoadingButton>\n            <Grid container>\n              <Grid item>\n                <Link to='/register'>\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n      </Container>\n  );\n}","import Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Paper } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport { LoadingButton } from '@mui/lab';\nimport agent from '../../app/api/agent';\nimport { toast } from 'react-toastify';\n\nexport default function Register() {\n    const history = useHistory();\n    const { register, handleSubmit, setError, formState: { isSubmitting, errors, isValid } } = useForm({\n        mode: 'all'\n    })\n\n    function handleApiErrors(errors: any) {\n        if (errors) {\n            errors.forEach((error: string) => {\n                if (error.includes('Password')) {\n                    setError('password', {message: error})\n                } else if (error.includes('Email')) {\n                    setError('email', {message: error})\n                } else if (error.includes('Username')) {\n                    setError('username', {message: error})\n                }\n            });\n        }\n    }\n\n    return (\n        <Container component={Paper} maxWidth=\"sm\"\n            sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Register\n            </Typography>\n            <Box component=\"form\" onSubmit={handleSubmit((data) =>\n                agent.Account.register(data)\n                .then(() => {\n                    toast.success('Registration successful - you can now login');\n                    history.push('/login');\n                })\n                .catch(error => handleApiErrors(error)))\n            }\n                noValidate sx={{ mt: 1 }\n                }>\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Username\"\n                    autoFocus //cursor in field automatically\n                    {...register('username', { required: 'Username is required' })}\n                    error={!!errors.username} // finds errors if they exist and prints in red\n                    helperText={errors?.username?.message}\n                />\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Email address\"\n                    {...register('email', { required: 'Email is required',\n                    pattern: {\n                        value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\n                        message: 'Not a valid email address'\n                    }\n                })}\n                    error={!!errors.email} // finds errors if they exist and prints in red\n                    helperText={errors?.email?.message}\n                />\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Password\"\n                    type=\"password\"\n                    {...register('password', { required: 'Password is required',\n                    pattern: {\n                        value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\n                        message: 'Password does not meet complexity requirements'\n                    }\n                })}\n                    error={!!errors.password} // finds errors if they exist and prints in red\n                    helperText={errors?.password?.message}\n                />\n            \n                <LoadingButton\n                    disabled={!isValid}\n                    loading={isSubmitting}\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                >\n                    Register\n                </LoadingButton>\n                <Grid container>\n                    <Grid item>\n                        <Link to='/login'>\n                            {\"Already have an account? Login\"}\n                        </Link>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Container>\n    );\n}","import { ComponentType } from \"react\";\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport { useAppSelector } from \"../store/configureStore\";\n\ninterface Props extends RouteProps {\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\n    roles?: string[];\n}\n\nexport default function PrivateRoute({ component: Component, roles, ...rest }: Props) {\n    const {user} = useAppSelector(state => state.account);\n    return (\n      <Route\n      {...rest} render={props => {\n        if (!user) {\n          return <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        }\n\n        if (roles && !roles?.some(r => user.roles?.includes(r))) {\n          toast.error('Not authorized to access this area')\n          return <Redirect\n            to={{\n              pathname: \"/catalog\",\n              state: { from: props.location }\n            }}\n          />\n        }\n        return  <Component {...props} />\n      }}\n      />\n    );\n  }\n","import { Button, Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { BasketItem } from \"../../app/models/basket\";\nimport { Order } from \"../../app/models/order\";\nimport BasketSummary from \"../basket/BasketSummary\";\nimport BasketTable from \"../basket/BasketTable\";\n\ninterface Props {\n    order: Order;\n    setSelectedOrder: (id: number) => void;\n}\n\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\n    return (\n        <>\n            <Box display='flex' justifyContent='space-between'>\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to orders</Button>\n            </Box>\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary subtotal={subtotal} />\n                </Grid>\n            </Grid>\n        </>\n    )\n} ","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { Order } from \"../../app/models/order\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport OrderDetailed from \"./OrderDetailed\";\n\nexport default function Orders() {\n    const [orders, setOrders] = useState<Order[] | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\n\n    useEffect(() => {\n        agent.Orders.list()\n            .then(orders => setOrders(orders))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false));\n    }, [])\n\n    if (loading) return <LoadingComponent message='Loading orders' />\n\n    if (selectedOrderNumber > 0) return (\n        <OrderDetailed \n            order={orders?.find(o => o.id === selectedOrderNumber)!}\n            setSelectedOrder={setSelectedOrderNumber}\n        />\n    )\n\n    return (\n        <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Order number</TableCell>\n                        <TableCell align=\"right\">Total</TableCell>\n                        <TableCell align=\"right\">Order Date</TableCell>\n                        <TableCell align=\"right\">Order Status</TableCell>\n                        <TableCell align=\"right\"></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {orders?.map((order) => (\n                        <TableRow\n                            key={order.id}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {order.id}\n                            </TableCell>\n                            <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\n                            <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\n                            <TableCell align=\"right\">{order.orderStatus}</TableCell>\n                            <TableCell align=\"right\">\n                                <Button onClick={() => setSelectedOrderNumber(order.id)}>\n                                    View\n                                </Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n} ","import { TextField } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n    multiline?: boolean;\n    rows?: number;\n    type?: string;\n}\n\nexport default function AppTextInput(props: Props) {\n    const {fieldState, field} = useController({...props, defaultValue: ''})\n    return (\n\n        <TextField \n            {...props}\n            {...field}\n            multiline={props.multiline}\n            rows={props.rows}\n            type={props.type}\n            fullWidth\n            variant='outlined'\n            error={!!fieldState.error}\n            helperText={fieldState.error?.message}\n        />\n    )\n}","import { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\"\n\ninterface Props extends UseControllerProps {\n    label: string;\n    disabled: boolean;\n}\n\nexport default function AppCheckbox(props: Props) {\n    const {field} = useController({...props, defaultValue: false});\n    return (\n        <FormControlLabel \n            control={\n                <Checkbox \n                    {...field}\n                    checked={field.value}\n                    color='secondary'\n                    disabled={props.disabled}\n                />\n            }\n            label={props.label}\n        />\n    )\n} ","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useFormContext } from 'react-hook-form';\nimport AppTextInput from '../../app/components/AppTextInput';\nimport AppCheckbox from '../../app/components/AppCheckbox';\n\nexport default function AddressForm() {\n    const {control, formState } = useFormContext();\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping address\n          </Typography>\n              <Grid container spacing={3}>\n                  <Grid item xs={12} sm={12}>\n                      <AppTextInput control={control} name='fullName' label='Full name' />\n                  </Grid>\n                  <Grid item xs={12}>\n                      <AppTextInput control={control} name='address1' label='Address 1' />\n                  </Grid>\n                  <Grid item xs={12}>\n                      <AppTextInput control={control} name='address2' label='Address 2' />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                      <AppTextInput control={control} name='city' label='City' />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                      <AppTextInput control={control} name='state' label='State' />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                      <AppTextInput control={control} name='zip' label='Zip' />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                      <AppTextInput control={control} name='country' label='Country' />\n                  </Grid>\n                  <Grid item xs={12}>\n                      <AppCheckbox \n                      disabled={!formState.isDirty}\n                      name='saveAddress' \n                      label='Save this as the default address' \n                      control={control} />\n                  </Grid>\n              </Grid>\n      </>\n  );\n}","import { InputBaseComponentProps } from \"@mui/material\";\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\n\ninterface Props extends InputBaseComponentProps {}\n\nexport const StripeInput = forwardRef(function StripeInput ({component: Component, ...props}: Props, ref: Ref<unknown>){\n    const elementRef = useRef<any>();\n\n    useImperativeHandle(ref, () => ({\n        focus: () => elementRef.current.focus\n    }));\n\n    return (\n        <Component \n            onReady={(element: any) => elementRef.current = element}\n            {...props}\n        />\n    )\n})","import Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport { useFormContext } from 'react-hook-form';\nimport AppTextInput from '../../app/components/AppTextInput';\nimport { StripeInput } from './StripeInput';\nimport { CardNumberElement, CardExpiryElement, CardCvcElement } from \"@stripe/react-stripe-js\";\nimport { StripeElementType} from '@stripe/stripe-js';\n\ninterface Props {\n  cardState: {elementError: {[key in StripeElementType]?: string}};\n  onCardInputChange: (event: any) => void;\n}\n\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\n  const {control} = useFormContext();\n  \n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <AppTextInput name='nameOnCard' label='Name on card' control={control} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            onChange={onCardInputChange}\n            error={!!cardState.elementError.cardNumber}\n            helperText={cardState.elementError.cardNumber}\n            id=\"cardNumber\"\n            label=\"Card number\"\n            fullWidth\n            autoComplete=\"cc-number\"\n            variant=\"outlined\"\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardNumberElement\n              }\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            onChange={onCardInputChange}\n            error={!!cardState.elementError.cardExpiry}\n            helperText={cardState.elementError.cardExpiry}            \n            id=\"expDate\"\n            label=\"Expiry date\"\n            fullWidth\n            autoComplete=\"cc-exp\"\n            variant=\"outlined\"\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardExpiryElement\n              }\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            onChange={onCardInputChange}\n            error={!!cardState.elementError.cardCvc}\n            helperText={cardState.elementError.cardCvc}\n            id=\"cvv\"\n            label=\"CVV\"\n            fullWidth\n            autoComplete=\"cc-csc\"\n            variant=\"outlined\"\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardCvcElement\n              }\n            }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n} ","import { Grid } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { useAppSelector } from '../../app/store/configureStore';\nimport BasketSummary from '../basket/BasketSummary';\nimport BasketTable from '../basket/BasketTable';\n\nexport default function Review() {\n  const {basket} = useAppSelector(state => state.basket);\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      {basket &&\n      <BasketTable items={basket.items} isBasket={false} />}\n      <Grid container>\n        <Grid item xs={6} />\n        <Grid item xs={6}>\n          <BasketSummary />\n        </Grid>\n      </Grid>\n    </>\n  );\n} ","import * as yup from 'yup';\n\nexport const validationSchema = [\n    yup.object({\n        fullName: yup.string().required('Full name is required'),\n        address1: yup.string().required('Addres line 1 is required'),\n        address2: yup.string().required(),\n        city: yup.string().required(),\n        state: yup.string().required(),\n        zip: yup.string().required(),\n        country: yup.string().required(),\n    }),\n    yup.object(),\n    yup.object({\n        nameOnCard: yup.string().required()\n    })\n]  ","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport {yupResolver} from '@hookform/resolvers/yup';\nimport { validationSchema } from \"./checkoutValidation\";\nimport agent from \"../../app/api/agent\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { clearBasket } from \"../basket/basketSlice\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { StripeElementType } from \"@stripe/stripe-js\";\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\n\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\n\n\nexport default function CheckoutPage() {\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [orderNumber, setOrderNumber] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const dispatch = useAppDispatch();\n    const [cardState, setCardState] = useState<{elementError: {[key in StripeElementType]?: string}}>({elementError: {}});\n    const [cardComplete, setCardComplete] = useState<any>({cardNumber: false, cardExpiry: false, cardCvc: false});\n    const [paymentMessage, setPaymentMessage] = useState('');\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\n    const { basket } = useAppSelector(state => state.basket);\n    const stripe = useStripe();\n    const elements = useElements();\n\n    function onCardInputChange(event: any) {\n        setCardState({\n        ...cardState,\n        elementError: {\n            ...cardState.elementError, \n            [event.elementType]: event.error?.message\n        }\n        })\n        setCardComplete({...cardComplete, [event.elementType]: event.complete});\n    }\n\n    function getStepContent(step: number) {\n        switch (step) {\n            case 0:\n                return <AddressForm />;\n            case 1:\n                return <Review />;\n            case 2:\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\n            default:\n                throw new Error('Unknown step');\n        }\n    }\n\n    const currentValidationSchema = validationSchema[activeStep];\n\n    const methods = useForm({\n        mode: 'all',\n        resolver: yupResolver(currentValidationSchema)\n    });\n\n    useEffect(() => {\n        agent.Account.fetchAddress()\n            .then(response => {\n                if (response) {\n                    methods.reset({...methods.getValues(), ...response, saveAddress: false})\n                }\n            })\n    }, [methods])\n\n    async function submitOrder(data: FieldValues) {\n        setLoading(true);\n        const {nameOnCard, saveAddress, ...shippingAddress} = data;\n        if (!stripe || !elements) return; //stripe is not ready\n        try {\n            const cardElement = elements.getElement(CardNumberElement);\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\n                payment_method: {\n                    card: cardElement!,\n                    billing_details: {\n                        name: nameOnCard\n                    }\n                }\n            });\n            console.log(paymentResult);\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\n                const orderNumber = await agent.Orders.create({saveAddress, shippingAddress});\n                setOrderNumber(orderNumber);\n                setPaymentSucceeded(true);\n                setPaymentMessage('Thank you - we have received your payment');\n                setActiveStep(activeStep + 1);\n                dispatch(clearBasket());\n                setLoading(false);\n            } else {\n                setPaymentMessage(paymentResult.error?.message!);\n                setPaymentSucceeded(false);\n                setLoading(false);\n                setActiveStep(activeStep + 1);\n            }\n        } catch (error) {\n            console.log(error);\n            setLoading(false);\n        }\n    }\n\n    const handleNext = async (data: FieldValues) => {\n        if (activeStep === steps.length - 1) {\n            await submitOrder(data);\n        } else {\n            setActiveStep(activeStep + 1);\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    function submitDisabled(): boolean {\n        if (activeStep === steps.length -1) {\n            return !cardComplete.cardCvc || \n            !cardComplete.cardExpiry || \n            !cardComplete.cardNumber || \n            !methods.formState.isValid\n        } else {\n            return !methods.formState.isValid\n        }\n    }\n\n    return (\n        <FormProvider {...methods}>\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                    Checkout\n                </Typography>\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n                    {steps.map((label) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                <>\n                    {activeStep === steps.length ? (\n                        <>\n                            <Typography variant=\"h5\" gutterBottom>\n                                {paymentMessage}\n                            </Typography>\n                            {paymentSucceeded ? (\n                                <Typography variant=\"subtitle1\">\n                                Your order number is #{orderNumber}. We have not emailed your order\n                                confirmation, and will not send you an update when your order has\n                                shipped as this is a fake store!\n                            </Typography>\n                            ): (\n                                <Button variant='contained' onClick={handleBack}>\n                                    Go back and try again\n                                </Button>\n                            )}\n                            \n                        </>\n                    ) : (\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\n                            {getStepContent(activeStep)}\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                                {activeStep !== 0 && (\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\n                                        Back\n                                    </Button>\n                                )}\n                                <LoadingButton\n                                    loading={loading}\n                                    disabled={submitDisabled()}\n                                    variant=\"contained\"\n                                    type='submit'\n                                    sx={{ mt: 3, ml: 1 }}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                                </LoadingButton>\n                            </Box>\n                        </form>\n                    )}\n                </>\n            </Paper>\n        </FormProvider>\n\n    );\n}","import { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { setBasket } from \"../basket/basketSlice\";\nimport CheckoutPage from \"./CheckoutPage\";\n\nconst stripePromise = loadStripe('pk_test_51J20scAbZYMogsXxe4V8wZ2JHX3RzAzE3e20zfeTh3tanJ6NnFVi1Yj416j0JL799ZnUmxoCOPYRPF7UlWASoI8Y00erEsnGjV')\n\nexport default function CheckoutWrapper() {\n    const dispatch = useAppDispatch();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        agent.Payments.createPaymentIntent()\n            .then(basket => dispatch(setBasket(basket)))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false))\n    }, [dispatch]);\n\n    if (loading) return <LoadingComponent message='Loading checkout... '/>\n\n    return (\n        <Elements stripe={stripePromise} >\n            <CheckoutPage />\n        </Elements>\n    )\n}","import { UploadFile } from '@mui/icons-material';\nimport { FormControl, FormHelperText, Typography } from '@mui/material';\nimport { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { useController, UseControllerProps } from 'react-hook-form'\n\ninterface Props extends UseControllerProps { }\n\nexport default function AppDropzone(props: Props) {\n    const { fieldState, field } = useController({ ...props, defaultValue: null });\n\n    const dzStyles = {\n        display: 'flex',\n        border: 'dashed 3px #eee',\n        borderColor: '#eee',\n        borderRadius: '5px',\n        paddingTop: '30px',\n        alignItems: 'center',\n        height: 200,\n        width: 500\n    }\n\n    const dzActive = {\n        borderColor: 'green'\n    }\n\n    const onDrop = useCallback((acceptedFiles: any[]) => {\n        acceptedFiles[0] = Object.assign(acceptedFiles[0], \n            {preview: URL.createObjectURL(acceptedFiles[0])});\n        field.onChange(acceptedFiles[0]);\n    }, [field])\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n    return (\n        <div {...getRootProps()}>\n            <FormControl error={!!fieldState.error} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles} >\n                <input {...getInputProps()} />\n                <UploadFile sx={{fontSize: '100px'}} />\n                <Typography variant='h4'>Drop image here</Typography>\n                <FormHelperText>{fieldState.error?.message}</FormHelperText> \n            </FormControl>\n        </div>\n    )\n}","import { FormControl, InputLabel, Select, MenuItem, FormHelperText } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n    items: string[];\n}\n\nexport default function AppSelectList(props: Props) {\n    const { fieldState, field } = useController({ ...props, defaultValue: '' });\n    return (\n        <FormControl fullWidth error={!!fieldState.error}>\n            <InputLabel>{props.label}</InputLabel>\n            <Select\n                value={field.value}\n                label={props.label}\n                onChange={field.onChange}\n            >\n                {props.items.map((item, index) => (\n                    <MenuItem key={index} value={item}>{item}</MenuItem>\n                ))}\n            </Select>\n            <FormHelperText>{fieldState.error?.message}</FormHelperText>\n        </FormControl>\n    )\n}","import * as yup from 'yup';\n\nexport const validationSchema = yup.object({\n    name: yup.string().required(),\n    brand: yup.string().required(),\n    type: yup.string().required(),\n    price: yup.number().required().moreThan(100),\n    quantityInStock: yup.number().required().min(0),\n    description: yup.string().required(),\n    file: yup.mixed().when('pictureUrl', {\n        is: (value: string) => !value,\n        then: yup.mixed().required('Please provide an image')\n    })\n})","import { Typography, Grid, Paper, Box, Button } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { FieldValues, useForm } from \"react-hook-form\";\nimport AppDropzone from \"../../app/components/AppDropzone\";\nimport AppSelectList from \"../../app/components/AppSelectList\";\nimport AppTextInput from \"../../app/components/AppTextInput\";\nimport useProducts from \"../../app/hooks/useProducts\";\nimport { Product } from \"../../app/models/product\";\nimport {yupResolver } from '@hookform/resolvers/yup';\nimport agent from \"../../app/api/agent\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { setProduct } from \"../catalog/catalogSlice\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { validationSchema } from \"./ProductValidation\";\n\ninterface Props {\n    product?: Product;\n    cancelEdit: () => void;\n}\n\nexport default function ProductForm({product, cancelEdit}: Props) {\n    const { control, reset, handleSubmit, watch, formState: {isDirty, isSubmitting} } = useForm({\n        resolver: yupResolver(validationSchema)\n    });\n    const {brands, types } = useProducts();\n    const watchFile = watch('file', null);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (product && !watchFile && !isDirty) reset(product);\n        return () => {\n            //happens when component is destroyed\n            if (watchFile) URL.revokeObjectURL(watchFile.preview);\n        }\n    }, [product, reset, watchFile, isDirty])\n\n    async function handleSubmitData(data: FieldValues) {\n        try {\n            let response: Product;\n            if (product) {\n                response = await agent.Admin.updateProduct(data);\n            } else {\n                response = await agent.Admin.createProduct(data);\n            }\n            dispatch(setProduct(response));\n            cancelEdit();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <Box component={Paper} sx={{p: 4}}>\n            <Typography variant=\"h4\" gutterBottom sx={{mb: 4}}>\n                Product Details\n            </Typography>\n            <form onSubmit={handleSubmit(handleSubmitData)}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={12}>\n                    <AppTextInput control={control} name='name' label='Product name' />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppSelectList control={control} items={brands} name='brand' label='Brand' />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppSelectList control={control} items={types} name='type' label='Type' />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput type='number' control={control} name='price' label='Price' />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput type='number' control={control} name='quantityInStock' label='Quantity in Stock' />\n                </Grid>\n                <Grid item xs={12}>\n                    <AppTextInput multiline={true} rows={4} control={control} name='description' label='Description' />\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex' justifyContent='space-between' alignItems='center' >\n                    <AppDropzone control={control} name='file' />\n                    {watchFile ? (\n                        <img src={watchFile.preview} alt=\"preview\" style={{maxHeight: 200}} />\n                    ) : (\n                        <img src={product?.pictureUrl} alt={product?.name} style={{maxHeight: 200}} />\n                    )}\n                    </Box>\n\n                </Grid>\n            </Grid>\n            <Box display='flex' justifyContent='space-between' sx={{mt: 3}}>\n                <Button onClick={cancelEdit} variant='contained' color='inherit'>Cancel</Button>\n                <LoadingButton loading={isSubmitting} variant='contained' color='success'>Submit</LoadingButton>\n            </Box>\n                           \n            </form>\n        </Box>\n    )\n}","import { Typography, Button, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\nimport { Edit, Delete } from \"@mui/icons-material\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport useProducts from \"../../app/hooks/useProducts\";\nimport AppPagination from \"../../app/components/AppPagination\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { removeProduct, setPageNumber } from \"../catalog/catalogSlice\";\nimport ProductForm from \"./ProductForm\";\nimport { useState } from \"react\";\nimport { Product } from \"../../app/models/product\";\nimport agent from \"../../app/api/agent\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function Inventory() {\n    const {products, metaData} = useProducts();\n    const dispatch = useAppDispatch();\n    const [editMode, setEditMode] = useState(false);\n    const [selectedProduct, setSelectedProduct] = useState<Product | undefined>(undefined);\n    const [loading, setLoading] = useState(false);\n    const [target, setTarget] = useState(0);\n\n    function handleSelectProduct(product: Product) {\n        setSelectedProduct(product);\n        setEditMode(true);\n    }\n\n    function handleDeleteProduct(id: number) {\n        setLoading(true);\n        setTarget(id);\n        agent.Admin.deleteProduct(id)\n            .then(() => dispatch(removeProduct(id)))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false))\n    }\n\n    function cancelEdit() {\n        if (selectedProduct) setSelectedProduct(undefined);\n        setEditMode(false);\n    }\n\n    if (editMode) return <ProductForm product={selectedProduct} cancelEdit={cancelEdit} />\n\n    return (\n        <>\n            <Box display='flex' justifyContent='space-between'>\n                <Typography sx={{ p: 2 }} variant='h4'>Inventory</Typography>\n                <Button onClick={() => setEditMode(true)} sx={{ m: 2 }} size='large' variant='contained'>Create</Button>\n            </Box>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>#</TableCell>\n                            <TableCell align=\"left\">Product</TableCell>\n                            <TableCell align=\"right\">Price</TableCell>\n                            <TableCell align=\"center\">Type</TableCell>\n                            <TableCell align=\"center\">Brand</TableCell>\n                            <TableCell align=\"center\">Quantity</TableCell>\n                            <TableCell align=\"right\"></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {products.map((product) => (\n                            <TableRow\n                                key={product.id}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {product.id}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    <Box display='flex' alignItems='center'>\n                                        <img src={product.pictureUrl} alt={product.name} style={{ height: 50, marginRight: 20 }} />\n                                        <span>{product.name}</span>\n                                    </Box>\n                                </TableCell>\n                                <TableCell align=\"right\">{currencyFormat(product.price)}</TableCell>\n                                <TableCell align=\"center\">{product.type}</TableCell>\n                                <TableCell align=\"center\">{product.brand}</TableCell>\n                                <TableCell align=\"center\">{product.quantityInStock}</TableCell>\n                                <TableCell align=\"right\">\n                                    <Button onClick={() => handleSelectProduct(product)} startIcon={<Edit />} />\n                                    <LoadingButton loading={loading && target === product.id} startIcon={<Delete />} onClick={() => handleDeleteProduct(product.id)} color='error' />\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {metaData &&\n                <Box sx={{pt: 2}}>\n                    <AppPagination metaData={metaData} onPageChange={(page: number) => dispatch(setPageNumber({setPageNumber: page}))} />\n                </Box>\n            }\n        </>\n    )\n}","import ThemeProvider from \"@mui/material/styles/ThemeProvider\";\nimport { Container, CssBaseline } from \"@mui/material\";\nimport createTheme from \"@mui/material/styles/createTheme\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport Header from \"./Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport ContactPage from \"../../features/contact/ContactPage\";\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ServerError from \"../errors/ServerError\";\nimport NotFound from \"../errors/NotFound\";\nimport BasketPage from \"../../features/basket/BasketPage\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport Login from \"../../features/account/Login\";\nimport Register from \"../../features/account/Register\";\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\nimport Inventory from \"../../features/admin/Inventory\";\n\nfunction App() {\nconst dispatch = useAppDispatch();\nconst [loading, setLoading] = useState(true);\n\nconst initApp = useCallback(async () => { //memoizes with callback\n  try {\n    await dispatch(fetchCurrentUser());\n    await dispatch(fetchBasketAsync());\n  } catch (error) {\n    console.log(error);\n  }\n}, [dispatch] )\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false));\n  }, [initApp])\n\n  const [darkMode, setDarkMode] = useState(false);\n  const paletteType = darkMode ? 'dark' : 'light';\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: {\n        default: paletteType === 'light' ? '#eaeaea' : '#121212'\n      }\n    }\n  })\n\n  function handleThemeChange() {\n    setDarkMode(!darkMode);\n  }\n\n  if (loading) return <LoadingComponent message='Initializing app...'/>\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <CssBaseline />\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n      <Route exact path='/' component={HomePage} />\n      <Route path={'/(.+)'} render={() => (\n        <Container sx={{ mt: 4 }}>\n          <Switch>\n            {/* can only use one route at a time */}\n            <Route exact path='/catalog' component={Catalog} />\n            <Route path='/catalog/:id' component={ProductDetails} />\n            <Route path='/about' component={AboutPage} />\n            <Route path='/contact' component={ContactPage} />\n            <Route path='/server-error' component={ServerError} />\n            <Route path='/basket' component={BasketPage} />\n            <PrivateRoute path='/checkout' component={CheckoutWrapper} />\n            <PrivateRoute path='/orders' component={Orders} />\n            <PrivateRoute roles={['Admin']} path='/inventory' component={Inventory} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n            <Route component={NotFound} />\n            {/* if none of the routes match, not found will show */}\n          </Switch>\n        </Container>\n      )} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from 'react-redux';\nimport { store } from './app/store/configureStore';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\n\n\nexport const history = createBrowserHistory();\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <Router history={history}>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </Router>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}