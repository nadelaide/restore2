{"version":3,"sources":["app/components/AppPagination.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/layout/LoadingComponent.tsx","app/models/pagination.ts","app/api/agent.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","features/home/HomePage.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/about/AboutPage.tsx","features/contact/ContactPage.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckbox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppPagination","metaData","onPageChange","currentPage","totalCount","totalPages","pageSize","Box","display","justifyContent","alignItems","Typography","Pagination","color","size","count","page","onChange","e","CheckboxButtons","items","checked","useState","checkedItems","setCheckedItems","FormGroup","map","item","FormControlLabel","control","Checkbox","indexOf","onClick","value","newChecked","findIndex","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","component","RadioGroup","Radio","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","variant","sx","position","top","PaginatedResponse","this","axios","defaults","baseURL","process","withCredentials","responseBody","response","data","interceptors","request","use","config","token","store","getState","account","user","headers","Authorization","a","pagination","JSON","parse","error","status","errors","modelStateErrors","key","push","flat","toast","title","history","pathname","state","Promise","reject","requests","url","params","get","then","body","post","delete","Basket","addItem","productId","quantity","removeItem","agent","Catalog","list","details","id","fetchFilters","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","Account","login","values","register","currentUser","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","rejectWithValue","condition","b","document","cookie","match","pop","getCookie","addBasketItemAsync","removeBasketItemAsync","basketSlice","createSlice","name","initialState","basket","reducers","setBasket","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","signInUser","userDto","dispatch","localStorage","setItem","stringify","fetchCurrentUser","setUser","getItem","accountSlice","signOut","productsAdapter","createEntityAdapter","getAxiosParams","productParams","URLSearchParams","append","pageNumber","toString","orderBy","searchTerm","brands","length","types","fetchProductsAsync","catalog","setMetaData","fetchProductAsync","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","upsertOne","productSelectors","getSelectors","counterSlice","increment","decrement","configureStore","reducer","counter","useAppDispatch","useDispatch","useAppSelector","useSelector","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","gutterBottom","price","brand","type","CardActions","LoadingButton","loading","includes","Button","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","fullWidth","sortOptions","selectAll","useEffect","columnSpacing","Paper","mb","p","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","List","ListItem","IconButton","Badge","badgeContent","ShoppingCart","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","src","alt","maxHeight","NotFound","Container","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","AboutPage","validationErrors","setValidationErrors","ButtonGroup","catch","Alert","severity","AlertTitle","ListItemText","ContactPage","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","split","AppTextInput","useController","defaultValue","fieldState","field","AppCheckbox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","App","initApp","useCallback","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","createRoot","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.1cbeb1f9.chunk.js","sourcesContent":["import { Box, Typography, Pagination } from \"@mui/material\";\nimport { MetaData } from \"../models/pagination\";\n\ninterface Props {\n    metaData: MetaData;\n    onPageChange: (page: number) => void;\n}\n\nexport default function AppPagination({metaData, onPageChange}: Props) {\n    const {currentPage, totalCount, totalPages, pageSize} = metaData;\n    return (\n        <Box display='flex' justifyContent='space-between' alignItems='center' >\n            <Typography>\n                Displaying {(currentPage-1)*pageSize+1}-\n                {currentPage*pageSize > totalCount ? totalCount : currentPage*pageSize} of {totalCount} items\n            </Typography>\n            <Pagination\n                color='secondary'\n                size='large'\n                count={totalPages}\n                page={currentPage}\n                onChange={(e, page) => onPageChange(page)}\n            />\n\n        </Box>\n    )\n}","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\nimport { useState } from \"react\";\n\ninterface Props {\n    items: string[];\n    checked?: string[];\n    onChange: (items: string[]) => void;\n}\n\nexport default function CheckboxButtons({items, checked, onChange}: Props) {\n    const [checkedItems, setCheckedItems] = useState(checked || [])\n\n    function handleChecked(value: string) {\n        const currentIndex = checkedItems.findIndex(item => item === value);\n        let newChecked: string[] = [];\n        if (currentIndex === - 1) newChecked = [...checkedItems, value];\n        else newChecked = checkedItems.filter(item => item !== value);\n        setCheckedItems(newChecked);\n        onChange(newChecked);\n    }\n\n    return (\n        <FormGroup>\n            {items.map(item => (\n                <FormControlLabel \n                    control={<Checkbox\n                        checked={checkedItems.indexOf(item) !== -1}\n                        onClick={() => handleChecked(item)}\n                         />} \n                    label={item} \n                    key={item} />\n            ))}\n        </FormGroup>\n    )\n}","\nimport { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\n\ninterface Props {\n    options: any[];\n    onChange: (event: any) => void;\n    selectedValue: string;\n}\n\nexport default function RadioButtonGroup({options, onChange, selectedValue}: Props) {\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup onChange={onChange} value={selectedValue}>\n                {options.map(({ value, label }) => (\n                    <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\n                ))}\n            </RadioGroup>\n        </FormControl>\n    )\n}","import { Backdrop, Box, CircularProgress, Typography } from \"@mui/material\";\n\ninterface Props {\n    message?: string;\n}\n\nexport default function LoadingComponent({message = 'Loading...'}: Props) {\n    return (\n        <Backdrop open={true} invisible={true}>\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\n                <CircularProgress size={100} color='secondary'/>\n                <Typography variant='h4' sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}>{message}</Typography>\n                \n            </Box>\n        </Backdrop>\n    )\n}","export interface MetaData {\n    currentPage: number;\n    totalPages: number;\n    pageSize: number;\n    totalCount: number;\n}\n\nexport class PaginatedResponse<T> {\n    items: T;\n    metaData: MetaData;\n\n    constructor(items: T, metaData: MetaData) {\n        this.items = items;\n        this.metaData = metaData;\n    }\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { PaginatedResponse } from \"../models/pagination\";\nimport { store } from \"../store/configureStore\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.withCredentials = true; // receive and set cookie in application storage as well\n\n//add loading delay\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500)) //1000 miliseconds\n\n//to extract data from the body\nconst responseBody = (response: AxiosResponse) => response.data;\n\naxios.interceptors.request.use(config => {\n    const token = store.getState().account.user?.token;\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n})\n\naxios.interceptors.response.use(async response => {\n    if (process.env.NODE_ENV === 'development') await sleep();\n    const pagination = response.headers['pagination'];\n    if (pagination) {\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\n        return response;\n    }\n    return response\n}, (error: AxiosError) => {\n    const {data, status} = error.response!; //! overides type safety\n    switch (status) {\n        case 400:\n            if (data.errors) {\n                const modelStateErrors: string[] =[];\n                for (const key in data.errors) {\n                    if (data.errors[key]) {\n                        modelStateErrors.push(data.errors[key])\n                    }\n                }\n                throw modelStateErrors.flat(); //flattens array into two strings\n            }\n            toast.error(data.title);\n            break;\n        case 401:\n            toast.error(data.title);\n            break;\n        case 500:\n            history.push({\n                pathname: '/server-error',\n                state: {error: data}\n            });\n            break;\n        default:\n            break;\n    }\n    return Promise.reject(error.response);\n})\n\nconst requests = {\n    get: (url: string, params?: URLSearchParams) => axios.get(url, {params}).then(responseBody),\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\n    delete: (url: string) => axios.delete(url).then(responseBody),\n}\n\nconst Catalog = {\n    list: (params: URLSearchParams) => requests.get('products', params), \n    details: (id: number) => requests.get(`products/${id}`),\n    fetchFilters: () => requests.get('products/filters')\n}\n\nconst TestErrors = {\n    get400Error: () => requests.get('buggy/bad-request'),\n    get401Error: () => requests.get('buggy/unauthorized'),\n    get404Error: () => requests.get('buggy/not-found'),\n    get500Error: () => requests.get('buggy/server-error'),\n    getValidationError: () => requests.get('buggy/validation-error'),\n}\n\nconst Basket = {\n    get: () => requests.get('basket'),\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}), //not sending data in body\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`), //not sending data in body\n}\n\nconst Account = {\n    login: (values: any) => requests.post('account/login', values),\n    register: (values: any) => requests.post('account/register', values),\n    currentUser: () => requests.get('account/currentUser'),\n    fetchAddress: () => requests.get('account/savedAddress')\n}\n\nconst Orders ={\n    list: () => requests.get('orders'),\n    fetch: (id: number) => requests.get(`orders/${id}`),\n    create: (values: any) => requests.post('orders', values)\n}\n\nconst Payments = {\n    createPaymentIntent: () => requests.post('payments', {})\n}\n\nconst agent = {\n    Catalog,\n    TestErrors,\n    Basket,\n    Account,\n    Orders,\n    Payments\n}\n\nexport default agent;","//get cookie from browser\nexport function getCookie(key: string) {\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\n    return b ? b.pop() : \"\";\n  }\n\nexport function currencyFormat(amount: number) {\n  return '$' + (amount / 100).toFixed(2)\n}","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { Basket } from \"../../app/models/basket\";\nimport { getCookie } from \"../../app/util/util\";\n\ninterface BasketState {\n    basket: Basket | null;\n    status: string;\n}\n\nconst initialState: BasketState = {\n    basket: null,\n    status: 'idle'\n}\n\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\n    'basket/fetchBasketAsync',\n    async (_, thunkAPI) => {\n        try {\n            return await agent.Basket.get();\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    },\n    {\n        condition: () => {\n            if (!getCookie('buyerId')) return false;\n        }\n    }\n)\n\nexport const addBasketItemAsync = createAsyncThunk<Basket, {productId: number, quantity?: number}>(\n    'basket/addBasketItemAsync',\n    async ({productId, quantity = 1}, thunkAPI) => {\n        try {\n            return await agent.Basket.addItem(productId, quantity);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const removeBasketItemAsync = createAsyncThunk<void, \n    {productId: number, quantity: number, name?: string}>(\n    'basket/removeBasketItemAsync',\n    async ({productId, quantity}, thunkAPI) => {\n        try {\n            await agent.Basket.removeItem(productId, quantity);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const basketSlice = createSlice({\n    name: 'basket',\n    initialState,\n    reducers: {\n        setBasket: (state, action) => {\n            state.basket = action.payload\n        },\n        clearBasket: (state) => {\n            state.basket = null;\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\n        });\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\n        });\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\n            const {productId, quantity} = action.meta.arg;\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\n            if (itemIndex === -1 || itemIndex === undefined) return;\n            state.basket!.items[itemIndex].quantity -= quantity;\n            if (state.basket?.items[itemIndex].quantity === 0) \n                state.basket.items.splice(itemIndex, 1);\n            state.status = 'idle';\n        });\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\n            state.basket = action.payload;\n            state.status = 'idle';\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n    })\n})\n\nexport const {setBasket, clearBasket} = basketSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport { FieldValues } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport agent from \"../../app/api/agent\";\nimport { User } from \"../../app/models/user\";\nimport { setBasket } from \"../basket/basketSlice\";\n\ninterface AccountState {\n    user: User | null;\n}\n\nconst initialState: AccountState = {\n    user: null\n}\n\nexport const signInUser = createAsyncThunk<User, FieldValues>(\n    'account/signInUser',\n    async (data, thunkAPI) => {\n        try {\n            const userDto = await agent.Account.login(data);\n            const {basket, ...user} = userDto;\n            if (basket) thunkAPI.dispatch(setBasket(basket));\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    }\n)\n\nexport const fetchCurrentUser = createAsyncThunk<User>(\n    'account/fetchCurrentUser',\n    async (_, thunkAPI) => {\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\n        try {\n            const userDto = await agent.Account.currentUser();\n            const {basket, ...user} = userDto;\n            if (basket) thunkAPI.dispatch(setBasket(basket));\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    },\n    {\n        condition: () => {\n            if (!localStorage.getItem('user')) return false;\n        }\n    }\n)\n\nexport const accountSlice = createSlice({\n    name: 'account',\n    initialState,\n    reducers: {\n        signOut: (state) => {\n            state.user = null;\n            localStorage.removeItem('user');\n            history.push('/');\n        },\n        setUser: (state, action) => {\n            state.user = action.payload;\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\n            state.user = null;\n            localStorage.removeItem('user');\n            toast.error('Session expired - please login again');\n            history.push('/');\n        });\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\n            state.user = action.payload;\n        });\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\n            throw action.payload;\n        })\n    })\n})\n\nexport const {signOut, setUser} = accountSlice.actions; ","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { MetaData } from \"../../app/models/pagination\";\nimport { Product, ProductParams } from \"../../app/models/product\";\nimport { RootState } from \"../../app/store/configureStore\";\n\n\ninterface CatalogState {\n    productsLoaded: boolean;\n    filtersLoaded: boolean;\n    status: string;\n    brands: string[];\n    types: string[];\n    productParams: ProductParams;\n    metaData: MetaData | null;\n}\n\nconst productsAdapter = createEntityAdapter<Product>();\n\nfunction getAxiosParams(productParams: ProductParams) {\n    const params = new URLSearchParams();\n    params.append('pageNumber', productParams.pageNumber.toString());\n    params.append('pageSize', productParams.pageSize.toString());\n    params.append('orderBy', productParams.orderBy.toString());\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\n    return params;\n}\n\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, {state: RootState}>(\n    'catalog/fetchProductsAsync',\n    async(_, thunkAPI) => {\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\n        try {\n            const response = await agent.Catalog.list(params);\n            thunkAPI.dispatch(setMetaData(response.metaData));\n            return response.items;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\n    'catalog/fetchProductAsync',\n    async(productId, thunkAPI) => {\n        try {\n            return await agent.Catalog.details(productId);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const fetchFilters = createAsyncThunk(\n    'catalog/fetchFilters',\n    async (_, thunkAPI) => {\n        try {\n            return agent.Catalog.fetchFilters();\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    }\n    )\n\nfunction initParams() {\n    return {\n        pageNumber: 1,\n            pageSize: 6,\n            orderBy: 'name',\n            brands: [],\n            types: []\n    }\n}\n\nexport const catalogSlice = createSlice({\n    name: 'catalog',\n    initialState: productsAdapter.getInitialState<CatalogState>({\n        productsLoaded: false,\n        filtersLoaded: false,\n        status: 'idle',\n        brands: [],\n        types: [],\n        productParams: initParams(),\n        metaData: null\n    }),\n    reducers: {\n        setProductParams: (state, action) => {\n            state.productsLoaded = false;\n            state.productParams = {...state.productParams, ...action.payload, pageNumber: 1}; //append new values onto existing\n        },\n        setPageNumber: (state, action) => {\n            state.productsLoaded = false;\n            state.productParams = {...state.productParams, ...action.payload};\n        },\n        setMetaData: (state, action) => {\n            state.metaData = action.payload;\n        },\n        resetProductParams: (state) => {\n            state.productParams = initParams();\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchProductsAsync.pending, (state) => {\n            state.status = 'pendingFetchProducts';\n        });\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\n            productsAdapter.setAll(state, action.payload);\n            state.status = 'idle';\n            state.productsLoaded = true;\n        });\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\n            console.log(action.payload)\n            state.status = 'idle';\n        });\n        builder.addCase(fetchProductAsync.pending, (state) => {\n            state.status = 'pendingFetchProduct';\n        });\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\n            productsAdapter.upsertOne(state, action.payload);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchFilters.pending, (state) => {\n            state.status = 'pendingFetchFilters';\n        });\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\n            state.brands = action.payload.brands;\n            state.types = action.payload.types;\n            state.filtersLoaded = true;\n            state.status = 'idle';\n        });\n        builder.addCase(fetchFilters.rejected, (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n    })\n})\n\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\nexport const {setProductParams, resetProductParams, setMetaData, setPageNumber} = catalogSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\";\n\n//slice of overall redux state\nexport interface CounterState {\n    data: number;\n    title: string;\n}\n\nconst initialState: CounterState = {\n    data: 42,\n    title: 'YARC'\n}\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment: (state, action) => {\n            state.data += action.payload\n        },\n        decrement: (state, action) => {\n            state.data -= action.payload\n        }\n    }\n})\n\nexport const {increment, decrement} = counterSlice.actions; //creates actions for us","import { configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { accountSlice } from \"../../features/account/accountSlice\";\nimport { basketSlice } from \"../../features/basket/basketSlice\";\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\nimport { counterSlice } from \"../../features/contact/counterSlice\";\n\n//contains state of redux store\nexport const store = configureStore({\n    reducer: {\n        counter: counterSlice.reducer,\n        basket: basketSlice.reducer,\n        catalog: catalogSlice.reducer,\n        account: accountSlice.reducer\n    }\n})\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { LoadingButton } from \"@mui/lab\";\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { Product } from \"../../app/models/product\";\nimport { useAppDispatch, useAppSelector} from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\n\ninterface Props {\n    product: Product;\n}\n\nexport default function ProductCard({product}: Props) {\n    const {status} = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch();\n\n    return (\n        <Card>\n            <CardHeader \n                avatar={\n                    <Avatar sx={{bgcolor: 'secondary.main'}}>\n                        {product.name.charAt(0).toUpperCase()}\n                    </Avatar>\n                }\n                title={product.name}\n                titleTypographyProps={{\n                    sx: {fontWeight: 'bold', color: 'primary.main'}\n                }}\n            />\n            <CardMedia\n                sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light'}}\n                image={product.pictureUrl}\n                title={product.name}\n            />\n            <CardContent>\n                <Typography gutterBottom color='secondary' variant=\"h5\">\n                    {currencyFormat(product.price)}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                    {product.brand} / {product.type}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <LoadingButton \n                loading={status.includes('pendingAddItem' + product.id)} \n                onClick={() => dispatch(addBasketItemAsync({productId: product.id}))}\n                size=\"small\">Add to Cart</LoadingButton>\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\n            </CardActions>\n        </Card>\n    )\n}","import {\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    Grid,\n    Skeleton\n} from \"@mui/material\";\n\nexport default function ProductCardSkeleton() {\n    return (\n        <Grid item xs component={Card}>\n            <CardHeader\n                avatar={\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\n                }\n                title={\n                    <Skeleton\n                        animation=\"wave\"\n                        height={10}\n                        width=\"80%\"\n                        style={{ marginBottom: 6 }}\n                    />\n                }\n            />\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\n            <CardContent>\n                <>\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n                </>\n            </CardContent>\n            <CardActions>\n                <>\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\n                </>\n            </CardActions>\n        </Grid>\n    )\n}","import { Grid } from \"@mui/material\";\nimport { Product } from \"../../app/models/product\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport ProductCard from \"./ProductCard\";\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\n\ninterface Props {\n    products: Product[];\n}\n\nexport default function ProductList({products}: Props) {\n    const {productsLoaded} = useAppSelector(state => state.catalog);\n    return (\n        <Grid container spacing={4}>\n            {products.map(product => ( //using props from signature above\n                <Grid item xs={4} key={product.id} >\n                    {!productsLoaded ? (\n                        <ProductCardSkeleton />\n                    ) : (\n                        <ProductCard product={product}/>\n                    )}\n                </Grid>\n            ))}\n        </Grid>\n    )\n}","import { debounce, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { setProductParams } from \"./catalogSlice\";\n\nexport default function ProductSearch() {\n    const {productParams} = useAppSelector(state => state.catalog);\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\n    const dispatch = useAppDispatch();\n\n    const debouncedSearch = debounce((event: any) => {\n        dispatch(setProductParams({searchTerm: event.target.value}))\n    }, 1000)\n\n\n    return (\n        <TextField\n            label='Search products'\n            variant='outlined'\n            fullWidth\n            value={searchTerm || ''}\n            onChange = {(event: any) => {\n                setSearchTerm(event.target.value);\n                debouncedSearch(event);\n            }}\n        />\n    )\n}","import { Grid, Paper } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport AppPagination from \"../../app/components/AppPagination\";\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\";\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { fetchFilters, fetchProductsAsync, productSelectors, setPageNumber, setProductParams } from \"./catalogSlice\";\nimport ProductList from \"./ProductList\";\nimport ProductSearch from \"./ProductSearch\";\n\nconst sortOptions = [\n    {value: 'name', label: 'Alphabetical'},\n    {value: 'priceDesc', label: 'Price - High to Low'},\n    {value: 'price', label: 'Price - Low to High'}\n]\n\nexport default function Catalog() { //specifies the properties you need\n\n    const products = useAppSelector(productSelectors.selectAll); //gives list of products\n    const {productsLoaded,  filtersLoaded, brands, types, productParams, metaData} = useAppSelector(state => state.catalog);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (!productsLoaded) dispatch(fetchProductsAsync());\n    }, [productsLoaded, dispatch]) //set empty array as dependency so useEffect is only ever called once instead of every time it's re-rendering\n    \n    useEffect(() => {\n        if (!filtersLoaded) dispatch(fetchFilters());\n    }, [dispatch, filtersLoaded])\n\n    if (!filtersLoaded) return <LoadingComponent message='Loading products...'/>\n\n    return (\n        <Grid container columnSpacing={4}>\n            <Grid item xs={3}>\n                <Paper sx={{ mb: 2 }}>\n                    <ProductSearch/>\n                </Paper>\n                <Paper sx={{ mb: 2, p: 2 }}>\n                    <RadioButtonGroup\n                        selectedValue={productParams.orderBy}\n                        options={sortOptions}\n                        onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\n                    />\n                </Paper>\n\n                <Paper sx={{ mb: 2, p: 2 }}>\n                    <CheckboxButtons \n                        items={brands}\n                        checked={productParams.brands}\n                        onChange={(items: string[]) => dispatch(setProductParams({brands: items}))}\n                    />\n                </Paper>\n\n                <Paper sx={{ mb: 2, p: 2 }}>\n                    <CheckboxButtons \n                            items={types}\n                            checked={productParams.types}\n                            onChange={(items: string[]) => dispatch(setProductParams({types: items}))}\n                        />\n                </Paper>\n\n            </Grid>\n            <Grid item xs={9}>\n                <ProductList products={products} />\n            </Grid>\n            <Grid item xs={3} />\n            <Grid item xs={9} sx={{ mb: 2}}>\n                {metaData &&\n                <AppPagination \n                    metaData={metaData}\n                    onPageChange={(page: number) => dispatch(setPageNumber({pageNumber: page}))}\n                />}\n            </Grid>\n        </Grid>\n    )\n}","import { Button, Menu, Fade, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport { signOut } from \"../../features/account/accountSlice\";\nimport { clearBasket } from \"../../features/basket/basketSlice\";\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\n\nexport default function SignedInMenu() {\n    const dispatch = useAppDispatch();\n    const { user } = useAppSelector(state => state.account);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            <Button\n                color='inherit'\n                onClick={handleClick}\n                sx={{ typography: 'h6' }}\n            >\n                {user?.email}\n            </Button>\n            <Menu\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My orders</MenuItem>\n                <MenuItem onClick={() => {\n                    dispatch(signOut());\n                    dispatch(clearBasket());\n                }}>Logout</MenuItem>\n            </Menu>\n        </>\n    );\n} ","import { ShoppingCart } from \"@mui/icons-material\";\nimport { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { useAppSelector } from \"../store/configureStore\";\nimport SignedInMenu from \"./SignedInMenu\";\n\ninterface Props {\n    darkMode: boolean;\n    handleThemeChange: () => void;\n}\n\n//array to store links\nconst midLinks = [\n    {title: 'catalog', path:'/catalog'},\n    {title: 'about', path:'/about'},\n    {title: 'contact', path:'/contact'},\n]\n\n//array to store right-handside links\nconst rightLinks = [\n    {title: 'login', path:'/login'},\n    {title: 'register', path:'/register'},\n]\nconst navStyles = {\n    color: 'inherit',\n    textDecoration: 'none',\n    typography: 'h6',\n    '&:hover': {\n        color: 'grey.500'\n    },\n    '&.active': {\n        color: 'text.secondary'\n    }\n}\n\nexport default function Header({darkMode, handleThemeChange} : Props) {\n    const {basket} = useAppSelector(state => state.basket);\n    const {user} =useAppSelector(state => state.account);\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0) //reduce - similar to map - executes a clal back for each item in the array\n\n    return (\n        <AppBar position='static' >\n            <Toolbar sx={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n\n                <Box display='flex' alignItems='center'>\n                    <Typography variant='h6' component={NavLink} to='/' exact sx={navStyles}>\n                        RE-STORE\n                    </Typography>\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\n                </Box>\n\n                <List sx={{ display: 'flex' }}>\n                    {midLinks.map(({ title, path }) => (\n                        <ListItem\n                            component={NavLink}\n                            to={path}\n                            key={path}\n                            sx={navStyles}\n                        >\n                            {title.toUpperCase()}\n                        </ListItem>\n                    ))}\n                </List>\n\n                <Box display='flex' alignItems='center'>\n                    <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }}>\n                        <Badge badgeContent={itemCount} color='secondary'>\n                            <ShoppingCart />\n                        </Badge>\n                    </IconButton>\n                    {user ? (\n                        <SignedInMenu />\n                    ) : (\n                        <List sx={{ display: 'flex' }}>\n                            {rightLinks.map(({ title, path }) => (\n                                <ListItem\n                                    component={NavLink}\n                                    to={path}\n                                    key={path}\n                                    sx={navStyles}\n                                >\n                                    {title.toUpperCase()}\n                                </ListItem>\n                            ))}\n                        </List>\n                    )}\n                </Box>\n            </Toolbar>\n        </AppBar>\n    )\n}","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Slider from 'react-slick';\n\nexport default function HomePage() {\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1\n      };\n\n    return (\n\n        <>\n            <Slider {...settings} >\n                <div>\n                    <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n                </div>\n                <div>\n                    <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n                </div>\n                <div>\n                    <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n                </div>\n            </Slider>\n\n            <Box display='flex' justifyContent='center' sx={{p: 4}}>\n                <Typography variant='h1'>\n                    Welcome to the shop!\n                </Typography>\n\n            </Box>\n        </>\n    )\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NotFound() {\n    return (\n        <Container component={Paper} sx={{height: 400}}>\n            <Typography gutterBottom variant='h3'>Oops, we could not find what you're looking for.</Typography>\n            <Divider />\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\n        </Container>\n    )\n}","import { LoadingButton } from \"@mui/lab\";\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NotFound from \"../../app/errors/NotFound\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { addBasketItemAsync, removeBasketItemAsync } from \"../basket/basketSlice\";\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\n\nexport default function ProductDetails() {\n    const {basket, status} = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch();\n    const{id} = useParams<{id: string}>();\n    //to store response from API in useEffect\n    const product = useAppSelector(state => productSelectors.selectById(state, id));\n    const {status: productStatus} = useAppSelector(state => state.catalog);\n    //set quantity - how many does the user already have in basket\n    const [quantity, setQuantity] = useState(0);\n    const item = basket?.items.find(i => i.productId === product?.id);\n\n    useEffect(() => {\n        if (item) setQuantity(item.quantity);\n        if (!product) dispatch(fetchProductAsync(parseInt(id)));\n    }, [id, item, dispatch, product]) //id is the dependency being used in this useEffect\n    // called when it first mounts and called if id changes\n    function handleInputChange(event: any) {\n        if (event.target.value >= 0) {\n            setQuantity(parseInt(event.target.value));\n        }\n    }\n\n    //check if removing items from cart, adding items, or adding a new item\n    function handleUpdateCart() {\n        //check for item quantity - if local state is greater, adding to quantity\n        if (!item || quantity > item.quantity) {\n            const updatedQuantity = item ? quantity - item.quantity : quantity // quantity is local state\n            dispatch(addBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\n        } else {\n            const updatedQuantity = item.quantity - quantity;\n            dispatch(removeBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\n        }\n    }\n\n\n    //add conditions before returning\n    // check before loading\n    if (productStatus.includes('pending')) return <LoadingComponent message='Loading product...'/>\n\n    if (!product) return <NotFound/>\n\n    return (\n        <Grid container spacing={6}>\n            <Grid item xs={6}>\n                <img src={product.pictureUrl} alt={product.name} style={{width: '100%'}} />\n            </Grid>\n            <Grid item xs={6}>\n                <Typography variant='h3'>{product.name}</Typography>\n                <Divider sx={{mb: 2}} />\n                <Typography variant='h4' color='secondary'>${(product.price /100).toFixed(2)}</Typography>\n                <TableContainer>\n                    <Table>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>Name</TableCell>\n                                <TableCell>{product.name}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Description</TableCell>\n                                <TableCell>{product.description}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Type</TableCell>\n                                <TableCell>{product.type}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Brand</TableCell>\n                                <TableCell>{product.brand}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Quantity in stock</TableCell>\n                                <TableCell>{product.quantityInStock}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <TextField\n                        onChange={handleInputChange}\n                            variant='outlined'\n                            type='number' //only accepts numbers in textfield\n                            label='Quantity in Cart'\n                            fullWidth\n                            value={quantity} //displays quantity in basket or 0\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <LoadingButton\n                            disabled={item?.quantity === quantity}\n                            loading={status.includes('pending')}\n                            onClick={handleUpdateCart}\n                            sx={{height: '55px'}}\n                            color='primary'\n                            size='large'\n                            variant='contained'\n                            fullWidth\n                        >\n                            {item ? 'Update Quantity' : 'Add to Cart'}\n                        </LoadingButton>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport agent from \"../../app/api/agent\";\n\nexport default function AboutPage() {\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\n\n    function getValidationError() {\n        agent.TestErrors.getValidationError()\n            .then(() => console.log('should not see this'))\n            .catch(error => setValidationErrors(error));\n    }\n\n    return (\n        <Container>\n            <Typography gutterBottom variant='h2'>Errors for testing purposes</Typography>\n            <ButtonGroup fullWidth>\n                <Button variant='contained' onClick={() => agent.TestErrors.get400Error().catch(error => console.log((error)))}>Test 400 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get401Error().catch(error => console.log((error)))}>Test 401 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get404Error().catch(error => console.log((error)))}>Test 404 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get500Error().catch(error => console.log((error)))}>Test 500 Error</Button>\n                <Button variant='contained' onClick={getValidationError}>Test Validation Error</Button>\n            </ButtonGroup>\n            {validationErrors.length > 0 && \n                <Alert severity='error'>\n                    <AlertTitle>Validation Errors</AlertTitle>\n                    <List>\n                        {validationErrors.map(error => (\n                            <ListItem key={error}>\n                                <ListItemText>{error}</ListItemText>\n                            </ListItem>\n                        ))}\n                    </List>\n                </Alert>    \n            }\n        </Container>\n    )\n}","import { Button, ButtonGroup, Typography } from \"@mui/material\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { decrement, increment } from \"./counterSlice\";\n\nexport default function ContactPage() {\n    const dispatch = useAppDispatch();\n    const {data, title} = useAppSelector(state => state.counter);\n    return (\n        <>\n            <Typography variant='h2'>\n                {title}\n            </Typography>\n            <Typography variant='h5'>\n                The data is: {data}\n            </Typography>\n            <ButtonGroup>\n                <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>Decrement</Button>\n                <Button onClick={() => dispatch(increment(1))} variant='contained' color='primary'>Increment</Button>\n            </ButtonGroup>\n        </>\n    )\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport default function ServerError() {\n    const history = useHistory();\n    const {state} = useLocation<any>();\n    return (\n        <Container component={Paper}>\n            {state?.error ? (\n                <>\n                <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\n                <Divider />\n                <Typography>{state.error.detail || 'Internal server error'}</Typography>\n                </>\n            ): (\n                <Typography variant='h3' gutterBottom>Server error</Typography>\n            )}\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\n        </Container>\n    )\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\n\ninterface Props {\n    subtotal?: number;\n}\n\nexport default function BasketSummary({subtotal}: Props) {\n    const {basket} = useAppSelector(state => state.basket);\n    if (subtotal === undefined)\n        subtotal = basket?.items.reduce((sum, item) => sum + (item.price * item.quantity), 0) ?? 0;\n    const deliveryFee = subtotal > 9999 ? 0 : 500;\n\n    return (\n        <>\n            <TableContainer component={Paper} variant={'outlined'}>\n                <Table>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell colSpan={2}>Subtotal</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Total</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\nimport { BasketItem } from \"../../app/models/basket\";\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\n\ninterface Props {\n    items: BasketItem[];\n    isBasket?: boolean;\n}\n\nexport default function BasketTable({items, isBasket = true}: Props) {\n    const { status } = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch();\n    return (\n        <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Product</TableCell>\n                            <TableCell align=\"right\">Price</TableCell>\n                            <TableCell align=\"center\">Quantity</TableCell>\n                            <TableCell align=\"right\">Subtotal</TableCell>\n                            {isBasket && \n                            <TableCell align=\"right\"></TableCell>}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {items.map((item) => (\n                            <TableRow\n                                key={item.productId}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <Box display='flex' alignItems='center'>\n                                        <img src={item.pictureUrl} alt={item.name} style={{ height: 50, marginRight: 20 }} />\n                                        <span>{item.name}</span>\n                                    </Box>\n                                </TableCell>\n                                <TableCell align=\"right\">{currencyFormat(item.price)}</TableCell>\n                                <TableCell align=\"center\">\n                                {isBasket &&\n                                    <LoadingButton loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: 1, name: 'rem' }))} color='secondary'>\n                                        <Remove />\n                                    </LoadingButton>}\n                                    {item.quantity}\n                                    {isBasket &&\n                                    <LoadingButton loading={status === 'pendingAddItem' + item.productId}\n                                        onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))} color='secondary'>\n                                        <Add />\n                                    </LoadingButton>}\n                                </TableCell>\n                                <TableCell align=\"right\">${((item.price / 100) * item.quantity).toFixed(2)}</TableCell>\n                                {isBasket &&\n                                <TableCell align=\"right\">\n                                    <LoadingButton loading={status === 'pendingRemoveItem' + item.productId + 'del'}\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: item.quantity, name: 'del' }))} color='error'>\n                                        <Delete />\n                                    </LoadingButton>\n                                </TableCell>}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n    )\n}","import { Button, Grid, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport BasketSummary from \"./BasketSummary\";\nimport BasketTable from \"./BasketTable\";\n\nexport default function BasketPage() {\n    const { basket } = useAppSelector(state => state.basket);\n\n    if (!basket) return <Typography variant='h3' >Your basket is empty</Typography>\n\n    return (\n        <>\n           <BasketTable items={basket.items} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary />\n                    <Button\n                        component={Link}\n                        to='/checkout'\n                        variant='contained'\n                        size='large'\n                        fullWidth\n                    >\n                        Checkout\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    )\n}","import Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Paper } from '@mui/material';\nimport { FieldValues, useForm } from 'react-hook-form';\nimport { LoadingButton } from '@mui/lab';\nimport { useAppDispatch } from '../../app/store/configureStore';\nimport { signInUser } from './accountSlice';\n\nexport default function Login() {\n    const history = useHistory();\n    const location = useLocation<any>();\n    const dispatch = useAppDispatch();\n    const {register, handleSubmit, formState: {isSubmitting, errors, isValid}} = useForm({\n        mode: 'all'\n    })\n\n    async function submitForm(data: FieldValues) {\n        try {\n          await dispatch(signInUser(data));\n          history.push(location.state?.from?.pathname || '/catalog');\n        } catch (error) {\n          console.log(error);\n        }\n    }\n\n  return (\n      <Container component={Paper} maxWidth=\"sm\" \n      sx={{display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4}}>\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              label=\"Username\"\n              autoFocus //cursor in field automatically\n              {...register('username', {required: 'Username is required'})}\n              error={!!errors.username} // finds errors if they exist and prints in red\n              helperText={errors?.username?.message}\n            />\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              label=\"Password\"\n              type=\"password\"\n              {...register('password', {required: 'Password is required'})}\n              error={!!errors.password} // finds errors if they exist and prints in red\n              helperText={errors?.password?.message}\n            />\n            <LoadingButton\n            disabled={!isValid}\n            loading={isSubmitting}\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </LoadingButton>\n            <Grid container>\n              <Grid item>\n                <Link to='/register'>\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n      </Container>\n  );\n}","import Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Paper } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport { LoadingButton } from '@mui/lab';\nimport agent from '../../app/api/agent';\nimport { toast } from 'react-toastify';\n\nexport default function Register() {\n    const history = useHistory();\n    const { register, handleSubmit, setError, formState: { isSubmitting, errors, isValid } } = useForm({\n        mode: 'all'\n    })\n\n    function handleApiErrors(errors: any) {\n        if (errors) {\n            errors.forEach((error: string) => {\n                if (error.includes('Password')) {\n                    setError('password', {message: error})\n                } else if (error.includes('Email')) {\n                    setError('email', {message: error})\n                } else if (error.includes('Username')) {\n                    setError('username', {message: error})\n                }\n            });\n        }\n    }\n\n    return (\n        <Container component={Paper} maxWidth=\"sm\"\n            sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Register\n            </Typography>\n            <Box component=\"form\" onSubmit={handleSubmit((data) =>\n                agent.Account.register(data)\n                .then(() => {\n                    toast.success('Registration successful - you can now login');\n                    history.push('/login');\n                })\n                .catch(error => handleApiErrors(error)))\n            }\n                noValidate sx={{ mt: 1 }\n                }>\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Username\"\n                    autoFocus //cursor in field automatically\n                    {...register('username', { required: 'Username is required' })}\n                    error={!!errors.username} // finds errors if they exist and prints in red\n                    helperText={errors?.username?.message}\n                />\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Email address\"\n                    {...register('email', { required: 'Email is required',\n                    pattern: {\n                        value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\n                        message: 'Not a valid email address'\n                    }\n                })}\n                    error={!!errors.email} // finds errors if they exist and prints in red\n                    helperText={errors?.email?.message}\n                />\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Password\"\n                    type=\"password\"\n                    {...register('password', { required: 'Password is required',\n                    pattern: {\n                        value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\n                        message: 'Password does not meet complexity requirements'\n                    }\n                })}\n                    error={!!errors.password} // finds errors if they exist and prints in red\n                    helperText={errors?.password?.message}\n                />\n            \n                <LoadingButton\n                    disabled={!isValid}\n                    loading={isSubmitting}\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                >\n                    Register\n                </LoadingButton>\n                <Grid container>\n                    <Grid item>\n                        <Link to='/login'>\n                            {\"Already have an account? Login\"}\n                        </Link>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Container>\n    );\n}","import { ComponentType } from \"react\";\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\nimport { useAppSelector } from \"../store/configureStore\";\n\ninterface Props extends RouteProps {\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>\n}\n\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n    const {user} = useAppSelector(state => state.account);\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          user ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n","import { Button, Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { BasketItem } from \"../../app/models/basket\";\nimport { Order } from \"../../app/models/order\";\nimport BasketSummary from \"../basket/BasketSummary\";\nimport BasketTable from \"../basket/BasketTable\";\n\ninterface Props {\n    order: Order;\n    setSelectedOrder: (id: number) => void;\n}\n\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\n    return (\n        <>\n            <Box display='flex' justifyContent='space-between'>\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to orders</Button>\n            </Box>\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary subtotal={subtotal} />\n                </Grid>\n            </Grid>\n        </>\n    )\n} ","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { Order } from \"../../app/models/order\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport OrderDetailed from \"./OrderDetailed\";\n\nexport default function Orders() {\n    const [orders, setOrders] = useState<Order[] | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\n\n    useEffect(() => {\n        agent.Orders.list()\n            .then(orders => setOrders(orders))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false));\n    }, [])\n\n    if (loading) return <LoadingComponent message='Loading orders' />\n\n    if (selectedOrderNumber > 0) return (\n        <OrderDetailed \n            order={orders?.find(o => o.id === selectedOrderNumber)!}\n            setSelectedOrder={setSelectedOrderNumber}\n        />\n    )\n\n    return (\n        <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Order number</TableCell>\n                        <TableCell align=\"right\">Total</TableCell>\n                        <TableCell align=\"right\">Order Date</TableCell>\n                        <TableCell align=\"right\">Order Status</TableCell>\n                        <TableCell align=\"right\"></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {orders?.map((order) => (\n                        <TableRow\n                            key={order.id}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {order.id}\n                            </TableCell>\n                            <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\n                            <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\n                            <TableCell align=\"right\">{order.orderStatus}</TableCell>\n                            <TableCell align=\"right\">\n                                <Button onClick={() => setSelectedOrderNumber(order.id)}>\n                                    View\n                                </Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n} ","import { TextField } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n}\n\nexport default function AppTextInput(props: Props) {\n    const {fieldState, field} = useController({...props, defaultValue: ''})\n    return (\n\n        <TextField \n            {...props}\n            {...field}\n            fullWidth\n            variant='outlined'\n            error={!!fieldState.error}\n            helperText={fieldState.error?.message}\n        />\n    )\n}","import { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\"\n\ninterface Props extends UseControllerProps {\n    label: string;\n    disabled: boolean;\n}\n\nexport default function AppCheckbox(props: Props) {\n    const {field} = useController({...props, defaultValue: false});\n    return (\n        <FormControlLabel \n            control={\n                <Checkbox \n                    {...field}\n                    checked={field.value}\n                    color='secondary'\n                    disabled={props.disabled}\n                />\n            }\n            label={props.label}\n        />\n    )\n} ","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useFormContext } from 'react-hook-form';\nimport AppTextInput from '../../app/components/AppTextInput';\nimport AppCheckbox from '../../app/components/AppCheckbox';\n\nexport default function AddressForm() {\n    const {control, formState } = useFormContext();\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping address\n          </Typography>\n              <Grid container spacing={3}>\n                  <Grid item xs={12} sm={12}>\n                      <AppTextInput control={control} name='fullName' label='Full name' />\n                  </Grid>\n                  <Grid item xs={12}>\n                      <AppTextInput control={control} name='address1' label='Address 1' />\n                  </Grid>\n                  <Grid item xs={12}>\n                      <AppTextInput control={control} name='address2' label='Address 2' />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                      <AppTextInput control={control} name='city' label='City' />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                      <AppTextInput control={control} name='state' label='State' />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                      <AppTextInput control={control} name='zip' label='Zip' />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                      <AppTextInput control={control} name='country' label='Country' />\n                  </Grid>\n                  <Grid item xs={12}>\n                      <AppCheckbox \n                      disabled={!formState.isDirty}\n                      name='saveAddress' \n                      label='Save this as the default address' \n                      control={control} />\n                  </Grid>\n              </Grid>\n      </>\n  );\n}","import { InputBaseComponentProps } from \"@mui/material\";\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\n\ninterface Props extends InputBaseComponentProps {}\n\nexport const StripeInput = forwardRef(function StripeInput ({component: Component, ...props}: Props, ref: Ref<unknown>){\n    const elementRef = useRef<any>();\n\n    useImperativeHandle(ref, () => ({\n        focus: () => elementRef.current.focus\n    }));\n\n    return (\n        <Component \n            onReady={(element: any) => elementRef.current = element}\n            {...props}\n        />\n    )\n})","import Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport { useFormContext } from 'react-hook-form';\nimport AppTextInput from '../../app/components/AppTextInput';\nimport { StripeInput } from './StripeInput';\nimport { CardNumberElement, CardExpiryElement, CardCvcElement } from \"@stripe/react-stripe-js\";\nimport { StripeElementType} from '@stripe/stripe-js';\n\ninterface Props {\n  cardState: {elementError: {[key in StripeElementType]?: string}};\n  onCardInputChange: (event: any) => void;\n}\n\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\n  const {control} = useFormContext();\n  \n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <AppTextInput name='nameOnCard' label='Name on card' control={control} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            onChange={onCardInputChange}\n            error={!!cardState.elementError.cardNumber}\n            helperText={cardState.elementError.cardNumber}\n            id=\"cardNumber\"\n            label=\"Card number\"\n            fullWidth\n            autoComplete=\"cc-number\"\n            variant=\"outlined\"\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardNumberElement\n              }\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            onChange={onCardInputChange}\n            error={!!cardState.elementError.cardExpiry}\n            helperText={cardState.elementError.cardExpiry}            \n            id=\"expDate\"\n            label=\"Expiry date\"\n            fullWidth\n            autoComplete=\"cc-exp\"\n            variant=\"outlined\"\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardExpiryElement\n              }\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            onChange={onCardInputChange}\n            error={!!cardState.elementError.cardCvc}\n            helperText={cardState.elementError.cardCvc}\n            id=\"cvv\"\n            label=\"CVV\"\n            fullWidth\n            autoComplete=\"cc-csc\"\n            variant=\"outlined\"\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardCvcElement\n              }\n            }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n} ","import { Grid } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { useAppSelector } from '../../app/store/configureStore';\nimport BasketSummary from '../basket/BasketSummary';\nimport BasketTable from '../basket/BasketTable';\n\nexport default function Review() {\n  const {basket} = useAppSelector(state => state.basket);\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      {basket &&\n      <BasketTable items={basket.items} isBasket={false} />}\n      <Grid container>\n        <Grid item xs={6} />\n        <Grid item xs={6}>\n          <BasketSummary />\n        </Grid>\n      </Grid>\n    </>\n  );\n} ","import * as yup from 'yup';\n\nexport const validationSchema = [\n    yup.object({\n        fullName: yup.string().required('Full name is required'),\n        address1: yup.string().required('Addres line 1 is required'),\n        address2: yup.string().required(),\n        city: yup.string().required(),\n        state: yup.string().required(),\n        zip: yup.string().required(),\n        country: yup.string().required(),\n    }),\n    yup.object(),\n    yup.object({\n        nameOnCard: yup.string().required()\n    })\n]  ","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport {yupResolver} from '@hookform/resolvers/yup';\nimport { validationSchema } from \"./checkoutValidation\";\nimport agent from \"../../app/api/agent\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { clearBasket } from \"../basket/basketSlice\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { StripeElementType } from \"@stripe/stripe-js\";\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\n\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\n\n\nexport default function CheckoutPage() {\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [orderNumber, setOrderNumber] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const dispatch = useAppDispatch();\n    const [cardState, setCardState] = useState<{elementError: {[key in StripeElementType]?: string}}>({elementError: {}});\n    const [cardComplete, setCardComplete] = useState<any>({cardNumber: false, cardExpiry: false, cardCvc: false});\n    const [paymentMessage, setPaymentMessage] = useState('');\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\n    const { basket } = useAppSelector(state => state.basket);\n    const stripe = useStripe();\n    const elements = useElements();\n\n    function onCardInputChange(event: any) {\n        setCardState({\n        ...cardState,\n        elementError: {\n            ...cardState.elementError, \n            [event.elementType]: event.error?.message\n        }\n        })\n        setCardComplete({...cardComplete, [event.elementType]: event.complete});\n    }\n\n    function getStepContent(step: number) {\n        switch (step) {\n            case 0:\n                return <AddressForm />;\n            case 1:\n                return <Review />;\n            case 2:\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\n            default:\n                throw new Error('Unknown step');\n        }\n    }\n\n    const currentValidationSchema = validationSchema[activeStep];\n\n    const methods = useForm({\n        mode: 'all',\n        resolver: yupResolver(currentValidationSchema)\n    });\n\n    useEffect(() => {\n        agent.Account.fetchAddress()\n            .then(response => {\n                if (response) {\n                    methods.reset({...methods.getValues(), ...response, saveAddress: false})\n                }\n            })\n    }, [methods])\n\n    async function submitOrder(data: FieldValues) {\n        setLoading(true);\n        const {nameOnCard, saveAddress, ...shippingAddress} = data;\n        if (!stripe || !elements) return; //stripe is not ready\n        try {\n            const cardElement = elements.getElement(CardNumberElement);\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\n                payment_method: {\n                    card: cardElement!,\n                    billing_details: {\n                        name: nameOnCard\n                    }\n                }\n            });\n            console.log(paymentResult);\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\n                const orderNumber = await agent.Orders.create({saveAddress, shippingAddress});\n                setOrderNumber(orderNumber);\n                setPaymentSucceeded(true);\n                setPaymentMessage('Thank you - we have received your payment');\n                setActiveStep(activeStep + 1);\n                dispatch(clearBasket());\n                setLoading(false);\n            } else {\n                setPaymentMessage(paymentResult.error?.message!);\n                setPaymentSucceeded(false);\n                setLoading(false);\n                setActiveStep(activeStep + 1);\n            }\n        } catch (error) {\n            console.log(error);\n            setLoading(false);\n        }\n    }\n\n    const handleNext = async (data: FieldValues) => {\n        if (activeStep === steps.length - 1) {\n            await submitOrder(data);\n        } else {\n            setActiveStep(activeStep + 1);\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    function submitDisabled(): boolean {\n        if (activeStep === steps.length -1) {\n            return !cardComplete.cardCvc || \n            !cardComplete.cardExpiry || \n            !cardComplete.cardNumber || \n            !methods.formState.isValid\n        } else {\n            return !methods.formState.isValid\n        }\n    }\n\n    return (\n        <FormProvider {...methods}>\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                    Checkout\n                </Typography>\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n                    {steps.map((label) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                <>\n                    {activeStep === steps.length ? (\n                        <>\n                            <Typography variant=\"h5\" gutterBottom>\n                                {paymentMessage}\n                            </Typography>\n                            {paymentSucceeded ? (\n                                <Typography variant=\"subtitle1\">\n                                Your order number is #{orderNumber}. We have not emailed your order\n                                confirmation, and will not send you an update when your order has\n                                shipped as this is a fake store!\n                            </Typography>\n                            ): (\n                                <Button variant='contained' onClick={handleBack}>\n                                    Go back and try again\n                                </Button>\n                            )}\n                            \n                        </>\n                    ) : (\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\n                            {getStepContent(activeStep)}\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                                {activeStep !== 0 && (\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\n                                        Back\n                                    </Button>\n                                )}\n                                <LoadingButton\n                                    loading={loading}\n                                    disabled={submitDisabled()}\n                                    variant=\"contained\"\n                                    type='submit'\n                                    sx={{ mt: 3, ml: 1 }}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                                </LoadingButton>\n                            </Box>\n                        </form>\n                    )}\n                </>\n            </Paper>\n        </FormProvider>\n\n    );\n}","import { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { setBasket } from \"../basket/basketSlice\";\nimport CheckoutPage from \"./CheckoutPage\";\n\nconst stripePromise = loadStripe('pk_test_51J20scAbZYMogsXxe4V8wZ2JHX3RzAzE3e20zfeTh3tanJ6NnFVi1Yj416j0JL799ZnUmxoCOPYRPF7UlWASoI8Y00erEsnGjV')\n\nexport default function CheckoutWrapper() {\n    const dispatch = useAppDispatch();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        agent.Payments.createPaymentIntent()\n            .then(basket => dispatch(setBasket(basket)))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false))\n    }, [dispatch]);\n\n    if (loading) return <LoadingComponent message='Loading checkout... '/>\n\n    return (\n        <Elements stripe={stripePromise} >\n            <CheckoutPage />\n        </Elements>\n    )\n}","import ThemeProvider from \"@mui/material/styles/ThemeProvider\";\nimport { Container, CssBaseline } from \"@mui/material\";\nimport createTheme from \"@mui/material/styles/createTheme\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport Header from \"./Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport ContactPage from \"../../features/contact/ContactPage\";\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ServerError from \"../errors/ServerError\";\nimport NotFound from \"../errors/NotFound\";\nimport BasketPage from \"../../features/basket/BasketPage\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport Login from \"../../features/account/Login\";\nimport Register from \"../../features/account/Register\";\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\n\nfunction App() {\nconst dispatch = useAppDispatch();\nconst [loading, setLoading] = useState(true);\n\nconst initApp = useCallback(async () => { //memoizes with callback\n  try {\n    await dispatch(fetchCurrentUser());\n    await dispatch(fetchBasketAsync());\n  } catch (error) {\n    console.log(error);\n  }\n}, [dispatch] )\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false));\n  }, [initApp])\n\n  const [darkMode, setDarkMode] = useState(false);\n  const paletteType = darkMode ? 'dark' : 'light';\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: {\n        default: paletteType === 'light' ? '#eaeaea' : '#121212'\n      }\n    }\n  })\n\n  function handleThemeChange() {\n    setDarkMode(!darkMode);\n  }\n\n  if (loading) return <LoadingComponent message='Initializing app...'/>\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <CssBaseline />\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n      <Route exact path='/' component={HomePage} />\n      <Route path={'/(.+)'} render={() => (\n        <Container sx={{ mt: 4 }}>\n          <Switch>\n            {/* can only use one route at a time */}\n            <Route exact path='/catalog' component={Catalog} />\n            <Route path='/catalog/:id' component={ProductDetails} />\n            <Route path='/about' component={AboutPage} />\n            <Route path='/contact' component={ContactPage} />\n            <Route path='/server-error' component={ServerError} />\n            <Route path='/basket' component={BasketPage} />\n            <PrivateRoute path='/checkout' component={CheckoutWrapper} />\n            <PrivateRoute path='/orders' component={Orders} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n            <Route component={NotFound} />\n            {/* if none of the routes match, not found will show */}\n          </Switch>\n        </Container>\n      )} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from 'react-redux';\nimport { store } from './app/store/configureStore';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\n\n\nexport const history = createBrowserHistory();\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <Router history={history}>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </Router>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}